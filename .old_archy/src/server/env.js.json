{
  "ast": {
    "nestedIndex": [],
    "label": "FILE",
    "name": "root",
    "str": "// @ts-check\n/**\n * This file is included in `/next.config.js` which ensures the app isn't built with invalid env vars.\n * It has to be a `.js`-file to be imported there.\n */\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst { z } = require('zod');\n\n/*eslint sort-keys: \"error\"*/\nconst envSchema = z.object({\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n});\n\nconst env = envSchema.safeParse(process.env);\n\nif (!env.success) {\n  console.error(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  );\n  process.exit(1);\n}\nmodule.exports.env = env.data;\n",
    "childrenLabels": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8
    ],
    "children": [
      {
        "nestedIndex": [
          0
        ],
        "str": "// @ts-check",
        "label": 0,
        "name": "comment"
      },
      {
        "nestedIndex": [
          1
        ],
        "str": "/**\n * This file is included in `/next.config.js` which ensures the app isn't built with invalid env vars.\n * It has to be a `.js`-file to be imported there.\n */",
        "label": 1,
        "name": "comment"
      },
      {
        "nestedIndex": [
          2
        ],
        "str": "/* eslint-disable @typescript-eslint/no-var-requires */",
        "label": 2,
        "name": "comment"
      },
      {
        "nestedIndex": [
          3
        ],
        "str": "const { z } = require('zod');",
        "label": 3,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              3,
              0
            ],
            "str": "{ z } = require('zod')",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  3,
                  0,
                  0
                ],
                "str": "{ z }",
                "label": "nameNode",
                "name": "object_pattern",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      3,
                      0,
                      0,
                      0
                    ],
                    "str": "z",
                    "label": 0,
                    "name": "shorthand_property_identifier_pattern"
                  }
                ]
              },
              {
                "nestedIndex": [
                  3,
                  0,
                  1
                ],
                "str": "require('zod')",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      3,
                      0,
                      1,
                      0
                    ],
                    "str": "require",
                    "label": "functionNode",
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      3,
                      0,
                      1,
                      1
                    ],
                    "str": "('zod')",
                    "label": "argumentsNode",
                    "name": "arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          3,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "'zod'",
                        "label": 0,
                        "name": "string",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              3,
                              0,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "zod",
                            "label": 0,
                            "name": "string_fragment"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          4
        ],
        "str": "/*eslint sort-keys: \"error\"*/",
        "label": 4,
        "name": "comment"
      },
      {
        "nestedIndex": [
          5
        ],
        "str": "const envSchema = z.object({\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n});",
        "label": 5,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              5,
              0
            ],
            "str": "envSchema = z.object({\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n})",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  5,
                  0,
                  0
                ],
                "str": "envSchema",
                "label": "nameNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  5,
                  0,
                  1
                ],
                "str": "z.object({\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n})",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      5,
                      0,
                      1,
                      0
                    ],
                    "str": "z.object",
                    "label": "functionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          5,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "z",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          5,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "object",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      5,
                      0,
                      1,
                      1
                    ],
                    "str": "({\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n})",
                    "label": "argumentsNode",
                    "name": "arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          5,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "{\n  DATABASE_URL: z.string().url(),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n}",
                        "label": 0,
                        "name": "object",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              5,
                              0,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "DATABASE_URL: z.string().url()",
                            "label": 0,
                            "name": "pair",
                            "childrenLabels": [
                              "keyNode",
                              "valueNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  5,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "DATABASE_URL",
                                "label": "keyNode",
                                "name": "property_identifier"
                              },
                              {
                                "nestedIndex": [
                                  5,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "z.string().url()",
                                "label": "valueNode",
                                "name": "call_expression",
                                "childrenLabels": [
                                  "functionNode",
                                  "argumentsNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      5,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0,
                                      1,
                                      0
                                    ],
                                    "str": "z.string().url",
                                    "label": "functionNode",
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          5,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "z.string()",
                                        "label": "objectNode",
                                        "name": "call_expression",
                                        "childrenLabels": [
                                          "functionNode",
                                          "argumentsNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              5,
                                              0,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "z.string",
                                            "label": "functionNode",
                                            "name": "member_expression",
                                            "childrenLabels": [
                                              "objectNode",
                                              "propertyNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  5,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  0,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "z",
                                                "label": "objectNode",
                                                "name": "identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  5,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  0,
                                                  0,
                                                  0,
                                                  1
                                                ],
                                                "str": "string",
                                                "label": "propertyNode",
                                                "name": "property_identifier"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              5,
                                              0,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "()",
                                            "label": "argumentsNode",
                                            "name": "arguments"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          5,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          1,
                                          0,
                                          1
                                        ],
                                        "str": "url",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      5,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1
                                    ],
                                    "str": "()",
                                    "label": "argumentsNode",
                                    "name": "arguments"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              5,
                              0,
                              1,
                              1,
                              0,
                              1
                            ],
                            "str": "NODE_ENV: z.enum(['development', 'test', 'production'])",
                            "label": 1,
                            "name": "pair",
                            "childrenLabels": [
                              "keyNode",
                              "valueNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  5,
                                  0,
                                  1,
                                  1,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "NODE_ENV",
                                "label": "keyNode",
                                "name": "property_identifier"
                              },
                              {
                                "nestedIndex": [
                                  5,
                                  0,
                                  1,
                                  1,
                                  0,
                                  1,
                                  1
                                ],
                                "str": "z.enum(['development', 'test', 'production'])",
                                "label": "valueNode",
                                "name": "call_expression",
                                "childrenLabels": [
                                  "functionNode",
                                  "argumentsNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      5,
                                      0,
                                      1,
                                      1,
                                      0,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "z.enum",
                                    "label": "functionNode",
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          5,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "z",
                                        "label": "objectNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          5,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1
                                        ],
                                        "str": "enum",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      5,
                                      0,
                                      1,
                                      1,
                                      0,
                                      1,
                                      1,
                                      1
                                    ],
                                    "str": "(['development', 'test', 'production'])",
                                    "label": "argumentsNode",
                                    "name": "arguments",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          5,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0
                                        ],
                                        "str": "['development', 'test', 'production']",
                                        "label": 0,
                                        "name": "array",
                                        "childrenLabels": [
                                          0,
                                          1,
                                          2
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              5,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "'development'",
                                            "label": 0,
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  5,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "development",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              5,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              1
                                            ],
                                            "str": "'test'",
                                            "label": 1,
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  5,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  0
                                                ],
                                                "str": "test",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              5,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              2
                                            ],
                                            "str": "'production'",
                                            "label": 2,
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  5,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  1,
                                                  0,
                                                  2,
                                                  0
                                                ],
                                                "str": "production",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          6
        ],
        "str": "const env = envSchema.safeParse(process.env);",
        "label": 6,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              6,
              0
            ],
            "str": "env = envSchema.safeParse(process.env)",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  6,
                  0,
                  0
                ],
                "str": "env",
                "label": "nameNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  6,
                  0,
                  1
                ],
                "str": "envSchema.safeParse(process.env)",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      6,
                      0,
                      1,
                      0
                    ],
                    "str": "envSchema.safeParse",
                    "label": "functionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          6,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "envSchema",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          6,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "safeParse",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      6,
                      0,
                      1,
                      1
                    ],
                    "str": "(process.env)",
                    "label": "argumentsNode",
                    "name": "arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          6,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "process.env",
                        "label": 0,
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              6,
                              0,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "process",
                            "label": "objectNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              6,
                              0,
                              1,
                              1,
                              0,
                              1
                            ],
                            "str": "env",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          7
        ],
        "str": "if (!env.success) {\n  console.error(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  );\n  process.exit(1);\n}",
        "label": 7,
        "name": "if_statement",
        "childrenLabels": [
          "conditionNode",
          "consequenceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              7,
              0
            ],
            "str": "(!env.success)",
            "label": "conditionNode",
            "name": "parenthesized_expression",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  7,
                  0,
                  0
                ],
                "str": "!env.success",
                "label": 0,
                "name": "unary_expression",
                "childrenLabels": [
                  "argumentNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      7,
                      0,
                      0,
                      0
                    ],
                    "str": "env.success",
                    "label": "argumentNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          7,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "env",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          7,
                          0,
                          0,
                          0,
                          1
                        ],
                        "str": "success",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              7,
              1
            ],
            "str": "{\n  console.error(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  );\n  process.exit(1);\n}",
            "label": "consequenceNode",
            "name": "statement_block",
            "childrenLabels": [
              0,
              1
            ],
            "children": [
              {
                "nestedIndex": [
                  7,
                  1,
                  0
                ],
                "str": "console.error(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  );",
                "label": 0,
                "name": "expression_statement",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      7,
                      1,
                      0,
                      0
                    ],
                    "str": "console.error(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  )",
                    "label": 0,
                    "name": "call_expression",
                    "childrenLabels": [
                      "functionNode",
                      "argumentsNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          7,
                          1,
                          0,
                          0,
                          0
                        ],
                        "str": "console.error",
                        "label": "functionNode",
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              7,
                              1,
                              0,
                              0,
                              0,
                              0
                            ],
                            "str": "console",
                            "label": "objectNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              7,
                              1,
                              0,
                              0,
                              0,
                              1
                            ],
                            "str": "error",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          7,
                          1,
                          0,
                          0,
                          1
                        ],
                        "str": "(\n    '‚ùå Invalid environment variables:',\n    JSON.stringify(env.error.format(), null, 4),\n  )",
                        "label": "argumentsNode",
                        "name": "arguments",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              7,
                              1,
                              0,
                              0,
                              1,
                              0
                            ],
                            "str": "'‚ùå Invalid environment variables:'",
                            "label": 0,
                            "name": "string",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  7,
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "‚ùå Invalid environment variables:",
                                "label": 0,
                                "name": "string_fragment"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              7,
                              1,
                              0,
                              0,
                              1,
                              1
                            ],
                            "str": "JSON.stringify(env.error.format(), null, 4)",
                            "label": 1,
                            "name": "call_expression",
                            "childrenLabels": [
                              "functionNode",
                              "argumentsNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  7,
                                  1,
                                  0,
                                  0,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "JSON.stringify",
                                "label": "functionNode",
                                "name": "member_expression",
                                "childrenLabels": [
                                  "objectNode",
                                  "propertyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      7,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "JSON",
                                    "label": "objectNode",
                                    "name": "identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      7,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "stringify",
                                    "label": "propertyNode",
                                    "name": "property_identifier"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  7,
                                  1,
                                  0,
                                  0,
                                  1,
                                  1,
                                  1
                                ],
                                "str": "(env.error.format(), null, 4)",
                                "label": "argumentsNode",
                                "name": "arguments",
                                "childrenLabels": [
                                  0,
                                  1,
                                  2
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      7,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "env.error.format()",
                                    "label": 0,
                                    "name": "call_expression",
                                    "childrenLabels": [
                                      "functionNode",
                                      "argumentsNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          7,
                                          1,
                                          0,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "env.error.format",
                                        "label": "functionNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              7,
                                              1,
                                              0,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "env.error",
                                            "label": "objectNode",
                                            "name": "member_expression",
                                            "childrenLabels": [
                                              "objectNode",
                                              "propertyNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  7,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "env",
                                                "label": "objectNode",
                                                "name": "identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  7,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  0,
                                                  1
                                                ],
                                                "str": "error",
                                                "label": "propertyNode",
                                                "name": "property_identifier"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              7,
                                              1,
                                              0,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "format",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          7,
                                          1,
                                          0,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0,
                                          1
                                        ],
                                        "str": "()",
                                        "label": "argumentsNode",
                                        "name": "arguments"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      7,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      1,
                                      1
                                    ],
                                    "str": "null",
                                    "label": 1,
                                    "name": "null"
                                  },
                                  {
                                    "nestedIndex": [
                                      7,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      1,
                                      2
                                    ],
                                    "str": "4",
                                    "label": 2,
                                    "name": "number"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  7,
                  1,
                  1
                ],
                "str": "process.exit(1);",
                "label": 1,
                "name": "expression_statement",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      7,
                      1,
                      1,
                      0
                    ],
                    "str": "process.exit(1)",
                    "label": 0,
                    "name": "call_expression",
                    "childrenLabels": [
                      "functionNode",
                      "argumentsNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          7,
                          1,
                          1,
                          0,
                          0
                        ],
                        "str": "process.exit",
                        "label": "functionNode",
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              7,
                              1,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "process",
                            "label": "objectNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              7,
                              1,
                              1,
                              0,
                              0,
                              1
                            ],
                            "str": "exit",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          7,
                          1,
                          1,
                          0,
                          1
                        ],
                        "str": "(1)",
                        "label": "argumentsNode",
                        "name": "arguments",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              7,
                              1,
                              1,
                              0,
                              1,
                              0
                            ],
                            "str": "1",
                            "label": 0,
                            "name": "number"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          8
        ],
        "str": "module.exports.env = env.data;",
        "label": 8,
        "name": "expression_statement",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              8,
              0
            ],
            "str": "module.exports.env = env.data",
            "label": 0,
            "name": "assignment_expression",
            "childrenLabels": [
              "leftNode",
              "rightNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  8,
                  0,
                  0
                ],
                "str": "module.exports.env",
                "label": "leftNode",
                "name": "member_expression",
                "childrenLabels": [
                  "objectNode",
                  "propertyNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      8,
                      0,
                      0,
                      0
                    ],
                    "str": "module.exports",
                    "label": "objectNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          8,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "module",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          8,
                          0,
                          0,
                          0,
                          1
                        ],
                        "str": "exports",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      8,
                      0,
                      0,
                      1
                    ],
                    "str": "env",
                    "label": "propertyNode",
                    "name": "property_identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  8,
                  0,
                  1
                ],
                "str": "env.data",
                "label": "rightNode",
                "name": "member_expression",
                "childrenLabels": [
                  "objectNode",
                  "propertyNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      8,
                      0,
                      1,
                      0
                    ],
                    "str": "env",
                    "label": "objectNode",
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      8,
                      0,
                      1,
                      1
                    ],
                    "str": "data",
                    "label": "propertyNode",
                    "name": "property_identifier"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "imports": [],
  "filePath": "../example-todo-list/src/server/env.js",
  "isTest": false,
  "isConfig": false
}