{
  "ast": {
    "nestedIndex": [],
    "label": "FILE",
    "name": "root",
    "str": "\n\n\n\n// ℹ️ Type-only import:\n// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-and-export\n\n\n\nfunction getBaseUrl() {\n  if (typeof window !== 'undefined') {\n    return '';\n  }\n  // reference for vercel.com\n  if (process.env.VERCEL_URL) {\n    return `https://${process.env.VERCEL_URL}`;\n  }\n\n  // // reference for render.com\n  if (process.env.RENDER_INTERNAL_HOSTNAME) {\n    return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;\n  }\n\n  // assume localhost\n  return `http://127.0.0.1:${process.env.PORT ?? 3000}`;\n}\n\n/**\n * Extend `NextPageContext` with meta data that can be picked up by `responseMeta()` when server-side rendering\n */\nexport interface SSRContext extends NextPageContext {\n  /**\n   * Set HTTP Status code\n   * @example\n   * const utils = trpc.useContext();\n   * if (utils.ssrContext) {\n   *   utils.ssrContext.status = 404;\n   * }\n   */\n  status?: number;\n}\n\n/**\n * A set of strongly-typed React hooks from your `AppRouter` type signature with `createReactQueryHooks`.\n * @link https://trpc.io/docs/react#3-create-trpc-hooks\n */\nexport const trpc = createTRPCNext<AppRouter, SSRContext>({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n});\n\nexport type RouterInput = inferRouterInputs<AppRouter>;\nexport type RouterOutput = inferRouterOutputs<AppRouter>;\n",
    "childrenLabels": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8
    ],
    "children": [
      {
        "nestedIndex": [
          0
        ],
        "str": "// ℹ️ Type-only import:",
        "label": 0,
        "name": "comment"
      },
      {
        "nestedIndex": [
          1
        ],
        "str": "// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-and-export",
        "label": 1,
        "name": "comment"
      },
      {
        "nestedIndex": [
          2
        ],
        "str": "function getBaseUrl() {\n  if (typeof window !== 'undefined') {\n    return '';\n  }\n  // reference for vercel.com\n  if (process.env.VERCEL_URL) {\n    return `https://${process.env.VERCEL_URL}`;\n  }\n\n  // // reference for render.com\n  if (process.env.RENDER_INTERNAL_HOSTNAME) {\n    return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;\n  }\n\n  // assume localhost\n  return `http://127.0.0.1:${process.env.PORT ?? 3000}`;\n}",
        "label": 2,
        "name": "function_declaration",
        "childrenLabels": [
          "nameNode",
          "parametersNode",
          "bodyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              2,
              0
            ],
            "str": "getBaseUrl",
            "label": "nameNode",
            "name": "identifier"
          },
          {
            "nestedIndex": [
              2,
              1
            ],
            "str": "()",
            "label": "parametersNode",
            "name": "formal_parameters"
          },
          {
            "nestedIndex": [
              2,
              2
            ],
            "str": "{\n  if (typeof window !== 'undefined') {\n    return '';\n  }\n  // reference for vercel.com\n  if (process.env.VERCEL_URL) {\n    return `https://${process.env.VERCEL_URL}`;\n  }\n\n  // // reference for render.com\n  if (process.env.RENDER_INTERNAL_HOSTNAME) {\n    return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;\n  }\n\n  // assume localhost\n  return `http://127.0.0.1:${process.env.PORT ?? 3000}`;\n}",
            "label": "bodyNode",
            "name": "statement_block",
            "childrenLabels": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "children": [
              {
                "nestedIndex": [
                  2,
                  2,
                  0
                ],
                "str": "if (typeof window !== 'undefined') {\n    return '';\n  }",
                "label": 0,
                "name": "if_statement",
                "childrenLabels": [
                  "conditionNode",
                  "consequenceNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      2,
                      2,
                      0,
                      0
                    ],
                    "str": "(typeof window !== 'undefined')",
                    "label": "conditionNode",
                    "name": "parenthesized_expression",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          0,
                          0,
                          0
                        ],
                        "str": "typeof window !== 'undefined'",
                        "label": 0,
                        "name": "binary_expression",
                        "childrenLabels": [
                          "leftNode",
                          "rightNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              0,
                              0,
                              0,
                              0
                            ],
                            "str": "typeof window",
                            "label": "leftNode",
                            "name": "unary_expression",
                            "childrenLabels": [
                              "argumentNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "window",
                                "label": "argumentNode",
                                "name": "identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              2,
                              2,
                              0,
                              0,
                              0,
                              1
                            ],
                            "str": "'undefined'",
                            "label": "rightNode",
                            "name": "string",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  0,
                                  0,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "undefined",
                                "label": 0,
                                "name": "string_fragment"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      2,
                      2,
                      0,
                      1
                    ],
                    "str": "{\n    return '';\n  }",
                    "label": "consequenceNode",
                    "name": "statement_block",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          0,
                          1,
                          0
                        ],
                        "str": "return '';",
                        "label": 0,
                        "name": "return_statement",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              0,
                              1,
                              0,
                              0
                            ],
                            "str": "''",
                            "label": 0,
                            "name": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  1
                ],
                "str": "// reference for vercel.com",
                "label": 1,
                "name": "comment"
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  2
                ],
                "str": "if (process.env.VERCEL_URL) {\n    return `https://${process.env.VERCEL_URL}`;\n  }",
                "label": 2,
                "name": "if_statement",
                "childrenLabels": [
                  "conditionNode",
                  "consequenceNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      2,
                      2,
                      2,
                      0
                    ],
                    "str": "(process.env.VERCEL_URL)",
                    "label": "conditionNode",
                    "name": "parenthesized_expression",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          2,
                          0,
                          0
                        ],
                        "str": "process.env.VERCEL_URL",
                        "label": 0,
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              2,
                              0,
                              0,
                              0
                            ],
                            "str": "process.env",
                            "label": "objectNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  2,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "process",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  2,
                                  0,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "env",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              2,
                              2,
                              2,
                              0,
                              0,
                              1
                            ],
                            "str": "VERCEL_URL",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      2,
                      2,
                      2,
                      1
                    ],
                    "str": "{\n    return `https://${process.env.VERCEL_URL}`;\n  }",
                    "label": "consequenceNode",
                    "name": "statement_block",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          2,
                          1,
                          0
                        ],
                        "str": "return `https://${process.env.VERCEL_URL}`;",
                        "label": 0,
                        "name": "return_statement",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              2,
                              1,
                              0,
                              0
                            ],
                            "str": "`https://${process.env.VERCEL_URL}`",
                            "label": 0,
                            "name": "template_string",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  2,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "${process.env.VERCEL_URL}",
                                "label": 0,
                                "name": "template_substitution",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      2,
                                      2,
                                      2,
                                      1,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "process.env.VERCEL_URL",
                                    "label": 0,
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          2,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "process.env",
                                        "label": "objectNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              2,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "process",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              2,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "env",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          2,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "VERCEL_URL",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  3
                ],
                "str": "// // reference for render.com",
                "label": 3,
                "name": "comment"
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  4
                ],
                "str": "if (process.env.RENDER_INTERNAL_HOSTNAME) {\n    return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;\n  }",
                "label": 4,
                "name": "if_statement",
                "childrenLabels": [
                  "conditionNode",
                  "consequenceNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      2,
                      2,
                      4,
                      0
                    ],
                    "str": "(process.env.RENDER_INTERNAL_HOSTNAME)",
                    "label": "conditionNode",
                    "name": "parenthesized_expression",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          4,
                          0,
                          0
                        ],
                        "str": "process.env.RENDER_INTERNAL_HOSTNAME",
                        "label": 0,
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              4,
                              0,
                              0,
                              0
                            ],
                            "str": "process.env",
                            "label": "objectNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  4,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "process",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  4,
                                  0,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "env",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              2,
                              2,
                              4,
                              0,
                              0,
                              1
                            ],
                            "str": "RENDER_INTERNAL_HOSTNAME",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      2,
                      2,
                      4,
                      1
                    ],
                    "str": "{\n    return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;\n  }",
                    "label": "consequenceNode",
                    "name": "statement_block",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          4,
                          1,
                          0
                        ],
                        "str": "return `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`;",
                        "label": 0,
                        "name": "return_statement",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              4,
                              1,
                              0,
                              0
                            ],
                            "str": "`http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}`",
                            "label": 0,
                            "name": "template_string",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  4,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "${process.env.RENDER_INTERNAL_HOSTNAME}",
                                "label": 0,
                                "name": "template_substitution",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      2,
                                      2,
                                      4,
                                      1,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "process.env.RENDER_INTERNAL_HOSTNAME",
                                    "label": 0,
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          4,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "process.env",
                                        "label": "objectNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              4,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "process",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              4,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "env",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          4,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "RENDER_INTERNAL_HOSTNAME",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  4,
                                  1,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "${process.env.PORT}",
                                "label": 1,
                                "name": "template_substitution",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      2,
                                      2,
                                      4,
                                      1,
                                      0,
                                      0,
                                      1,
                                      0
                                    ],
                                    "str": "process.env.PORT",
                                    "label": 0,
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          4,
                                          1,
                                          0,
                                          0,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "process.env",
                                        "label": "objectNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              4,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "process",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              2,
                                              2,
                                              4,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "env",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          4,
                                          1,
                                          0,
                                          0,
                                          1,
                                          0,
                                          1
                                        ],
                                        "str": "PORT",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  5
                ],
                "str": "// assume localhost",
                "label": 5,
                "name": "comment"
              },
              {
                "nestedIndex": [
                  2,
                  2,
                  6
                ],
                "str": "return `http://127.0.0.1:${process.env.PORT ?? 3000}`;",
                "label": 6,
                "name": "return_statement",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      2,
                      2,
                      6,
                      0
                    ],
                    "str": "`http://127.0.0.1:${process.env.PORT ?? 3000}`",
                    "label": 0,
                    "name": "template_string",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          2,
                          6,
                          0,
                          0
                        ],
                        "str": "${process.env.PORT ?? 3000}",
                        "label": 0,
                        "name": "template_substitution",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              2,
                              2,
                              6,
                              0,
                              0,
                              0
                            ],
                            "str": "process.env.PORT ?? 3000",
                            "label": 0,
                            "name": "binary_expression",
                            "childrenLabels": [
                              "leftNode",
                              "rightNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  6,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "process.env.PORT",
                                "label": "leftNode",
                                "name": "member_expression",
                                "childrenLabels": [
                                  "objectNode",
                                  "propertyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      2,
                                      2,
                                      6,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "process.env",
                                    "label": "objectNode",
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          6,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "process",
                                        "label": "objectNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          2,
                                          2,
                                          6,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "env",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      2,
                                      2,
                                      6,
                                      0,
                                      0,
                                      0,
                                      0,
                                      1
                                    ],
                                    "str": "PORT",
                                    "label": "propertyNode",
                                    "name": "property_identifier"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  2,
                                  2,
                                  6,
                                  0,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "3000",
                                "label": "rightNode",
                                "name": "number"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          3
        ],
        "str": "/**\n * Extend `NextPageContext` with meta data that can be picked up by `responseMeta()` when server-side rendering\n */",
        "label": 3,
        "name": "comment"
      },
      {
        "nestedIndex": [
          4
        ],
        "str": "export interface SSRContext extends NextPageContext {\n  /**\n   * Set HTTP Status code\n   * @example\n   * const utils = trpc.useContext();\n   * if (utils.ssrContext) {\n   *   utils.ssrContext.status = 404;\n   * }\n   */\n  status?: number;\n}",
        "label": 4,
        "name": "export_statement",
        "childrenLabels": [
          "declarationNode"
        ],
        "children": [
          {
            "nestedIndex": [
              4,
              0
            ],
            "str": "interface SSRContext extends NextPageContext {\n  /**\n   * Set HTTP Status code\n   * @example\n   * const utils = trpc.useContext();\n   * if (utils.ssrContext) {\n   *   utils.ssrContext.status = 404;\n   * }\n   */\n  status?: number;\n}",
            "label": "declarationNode",
            "name": "interface_declaration",
            "childrenLabels": [
              "nameNode",
              1,
              "bodyNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  4,
                  0,
                  0
                ],
                "str": "SSRContext",
                "label": "nameNode",
                "name": "type_identifier"
              },
              {
                "nestedIndex": [
                  4,
                  0,
                  1
                ],
                "str": "extends NextPageContext",
                "label": 1,
                "name": "extends_type_clause",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      4,
                      0,
                      1,
                      0
                    ],
                    "str": "NextPageContext",
                    "label": 0,
                    "name": "type_identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  4,
                  0,
                  2
                ],
                "str": "{\n  /**\n   * Set HTTP Status code\n   * @example\n   * const utils = trpc.useContext();\n   * if (utils.ssrContext) {\n   *   utils.ssrContext.status = 404;\n   * }\n   */\n  status?: number;\n}",
                "label": "bodyNode",
                "name": "object_type",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      4,
                      0,
                      2,
                      0
                    ],
                    "str": "/**\n   * Set HTTP Status code\n   * @example\n   * const utils = trpc.useContext();\n   * if (utils.ssrContext) {\n   *   utils.ssrContext.status = 404;\n   * }\n   */",
                    "label": 0,
                    "name": "comment"
                  },
                  {
                    "nestedIndex": [
                      4,
                      0,
                      2,
                      1
                    ],
                    "str": "status?: number",
                    "label": 1,
                    "name": "property_signature",
                    "childrenLabels": [
                      "nameNode",
                      "typeNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          4,
                          0,
                          2,
                          1,
                          0
                        ],
                        "str": "status",
                        "label": "nameNode",
                        "name": "property_identifier"
                      },
                      {
                        "nestedIndex": [
                          4,
                          0,
                          2,
                          1,
                          1
                        ],
                        "str": ": number",
                        "label": "typeNode",
                        "name": "type_annotation",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              4,
                              0,
                              2,
                              1,
                              1,
                              0
                            ],
                            "str": "number",
                            "label": 0,
                            "name": "predefined_type"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          5
        ],
        "str": "/**\n * A set of strongly-typed React hooks from your `AppRouter` type signature with `createReactQueryHooks`.\n * @link https://trpc.io/docs/react#3-create-trpc-hooks\n */",
        "label": 5,
        "name": "comment"
      },
      {
        "nestedIndex": [
          6
        ],
        "str": "export const trpc = createTRPCNext<AppRouter, SSRContext>({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n});",
        "label": 6,
        "name": "export_statement",
        "childrenLabels": [
          "declarationNode"
        ],
        "children": [
          {
            "nestedIndex": [
              6,
              0
            ],
            "str": "const trpc = createTRPCNext<AppRouter, SSRContext>({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n});",
            "label": "declarationNode",
            "name": "lexical_declaration",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  6,
                  0,
                  0
                ],
                "str": "trpc = createTRPCNext<AppRouter, SSRContext>({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n})",
                "label": 0,
                "name": "variable_declarator",
                "childrenLabels": [
                  "nameNode",
                  "valueNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      6,
                      0,
                      0,
                      0
                    ],
                    "str": "trpc",
                    "label": "nameNode",
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      6,
                      0,
                      0,
                      1
                    ],
                    "str": "createTRPCNext<AppRouter, SSRContext>({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n})",
                    "label": "valueNode",
                    "name": "call_expression",
                    "childrenLabels": [
                      "functionNode",
                      "typeArgumentsNode",
                      "argumentsNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          6,
                          0,
                          0,
                          1,
                          0
                        ],
                        "str": "createTRPCNext",
                        "label": "functionNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          6,
                          0,
                          0,
                          1,
                          1
                        ],
                        "str": "<AppRouter, SSRContext>",
                        "label": "typeArgumentsNode",
                        "name": "type_arguments",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              6,
                              0,
                              0,
                              1,
                              1,
                              0
                            ],
                            "str": "AppRouter",
                            "label": 0,
                            "name": "type_identifier"
                          },
                          {
                            "nestedIndex": [
                              6,
                              0,
                              0,
                              1,
                              1,
                              1
                            ],
                            "str": "SSRContext",
                            "label": 1,
                            "name": "type_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          6,
                          0,
                          0,
                          1,
                          2
                        ],
                        "str": "({\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n})",
                        "label": "argumentsNode",
                        "name": "arguments",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              6,
                              0,
                              0,
                              1,
                              2,
                              0
                            ],
                            "str": "{\n  config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  },\n  /**\n   * @link https://trpc.io/docs/ssr\n   */\n  ssr: true,\n  /**\n   * Set headers or status code when doing SSR\n   */\n  responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  },\n}",
                            "label": 0,
                            "name": "object",
                            "childrenLabels": [
                              0,
                              1,
                              2,
                              3,
                              4
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  6,
                                  0,
                                  0,
                                  1,
                                  2,
                                  0,
                                  0
                                ],
                                "str": "config({ ctx }) {\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  }",
                                "label": 0,
                                "name": "method_definition",
                                "childrenLabels": [
                                  "nameNode",
                                  "parametersNode",
                                  "bodyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "config",
                                    "label": "nameNode",
                                    "name": "property_identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      0,
                                      1
                                    ],
                                    "str": "({ ctx })",
                                    "label": "parametersNode",
                                    "name": "formal_parameters",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          0,
                                          1,
                                          0
                                        ],
                                        "str": "{ ctx }",
                                        "label": 0,
                                        "name": "required_parameter",
                                        "childrenLabels": [
                                          "patternNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "{ ctx }",
                                            "label": "patternNode",
                                            "name": "object_pattern",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  1,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "ctx",
                                                "label": 0,
                                                "name": "shorthand_property_identifier_pattern"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      0,
                                      2
                                    ],
                                    "str": "{\n    /**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */\n    return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };\n  }",
                                    "label": "bodyNode",
                                    "name": "statement_block",
                                    "childrenLabels": [
                                      0,
                                      1
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          0,
                                          2,
                                          0
                                        ],
                                        "str": "/**\n     * If you want to use SSR, you need to use the server's full URL\n     * @link https://trpc.io/docs/ssr\n     */",
                                        "label": 0,
                                        "name": "comment"
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          0,
                                          2,
                                          1
                                        ],
                                        "str": "return {\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    };",
                                        "label": 1,
                                        "name": "return_statement",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              0,
                                              2,
                                              1,
                                              0
                                            ],
                                            "str": "{\n      /**\n       * @link https://trpc.io/docs/data-transformers\n       */\n      transformer,\n      /**\n       * @link https://trpc.io/docs/client/links\n       */\n      links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ],\n      /**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */\n      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n    }",
                                            "label": 0,
                                            "name": "object",
                                            "childrenLabels": [
                                              0,
                                              1,
                                              2,
                                              3,
                                              4,
                                              5
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "/**\n       * @link https://trpc.io/docs/data-transformers\n       */",
                                                "label": 0,
                                                "name": "comment"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  1
                                                ],
                                                "str": "transformer",
                                                "label": 1,
                                                "name": "shorthand_property_identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  2
                                                ],
                                                "str": "/**\n       * @link https://trpc.io/docs/client/links\n       */",
                                                "label": 2,
                                                "name": "comment"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  3
                                                ],
                                                "str": "links: [\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ]",
                                                "label": 3,
                                                "name": "pair",
                                                "childrenLabels": [
                                                  "keyNode",
                                                  "valueNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      0,
                                                      2,
                                                      1,
                                                      0,
                                                      3,
                                                      0
                                                    ],
                                                    "str": "links",
                                                    "label": "keyNode",
                                                    "name": "property_identifier"
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      0,
                                                      2,
                                                      1,
                                                      0,
                                                      3,
                                                      1
                                                    ],
                                                    "str": "[\n        // adds pretty logs to your console in development and logs errors in production\n        loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }),\n        httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }),\n      ]",
                                                    "label": "valueNode",
                                                    "name": "array",
                                                    "childrenLabels": [
                                                      0,
                                                      1,
                                                      2
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          0,
                                                          2,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          0
                                                        ],
                                                        "str": "// adds pretty logs to your console in development and logs errors in production",
                                                        "label": 0,
                                                        "name": "comment"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          0,
                                                          2,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          1
                                                        ],
                                                        "str": "loggerLink({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        })",
                                                        "label": 1,
                                                        "name": "call_expression",
                                                        "childrenLabels": [
                                                          "functionNode",
                                                          "argumentsNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              3,
                                                              1,
                                                              1,
                                                              0
                                                            ],
                                                            "str": "loggerLink",
                                                            "label": "functionNode",
                                                            "name": "identifier"
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              3,
                                                              1,
                                                              1,
                                                              1
                                                            ],
                                                            "str": "({\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        })",
                                                            "label": "argumentsNode",
                                                            "name": "arguments",
                                                            "childrenLabels": [
                                                              0
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  0,
                                                                  2,
                                                                  1,
                                                                  0,
                                                                  3,
                                                                  1,
                                                                  1,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "{\n          enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error),\n        }",
                                                                "label": 0,
                                                                "name": "object",
                                                                "childrenLabels": [
                                                                  0
                                                                ],
                                                                "children": [
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      0,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      3,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0
                                                                    ],
                                                                    "str": "enabled: (opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error)",
                                                                    "label": 0,
                                                                    "name": "pair",
                                                                    "childrenLabels": [
                                                                      "keyNode",
                                                                      "valueNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          0
                                                                        ],
                                                                        "str": "enabled",
                                                                        "label": "keyNode",
                                                                        "name": "property_identifier"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1
                                                                        ],
                                                                        "str": "(opts) =>\n            process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error)",
                                                                        "label": "valueNode",
                                                                        "name": "arrow_function",
                                                                        "childrenLabels": [
                                                                          "parametersNode",
                                                                          "bodyNode"
                                                                        ],
                                                                        "children": [
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              0
                                                                            ],
                                                                            "str": "(opts)",
                                                                            "label": "parametersNode",
                                                                            "name": "formal_parameters",
                                                                            "childrenLabels": [
                                                                              0
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  0
                                                                                ],
                                                                                "str": "opts",
                                                                                "label": 0,
                                                                                "name": "required_parameter",
                                                                                "childrenLabels": [
                                                                                  "patternNode"
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "opts",
                                                                                    "label": "patternNode",
                                                                                    "name": "identifier"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              1
                                                                            ],
                                                                            "str": "process.env.NODE_ENV === 'development' ||\n            (opts.direction === 'down' && opts.result instanceof Error)",
                                                                            "label": "bodyNode",
                                                                            "name": "binary_expression",
                                                                            "childrenLabels": [
                                                                              "leftNode",
                                                                              "rightNode"
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0
                                                                                ],
                                                                                "str": "process.env.NODE_ENV === 'development'",
                                                                                "label": "leftNode",
                                                                                "name": "binary_expression",
                                                                                "childrenLabels": [
                                                                                  "leftNode",
                                                                                  "rightNode"
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "process.env.NODE_ENV",
                                                                                    "label": "leftNode",
                                                                                    "name": "member_expression",
                                                                                    "childrenLabels": [
                                                                                      "objectNode",
                                                                                      "propertyNode"
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "process.env",
                                                                                        "label": "objectNode",
                                                                                        "name": "member_expression",
                                                                                        "childrenLabels": [
                                                                                          "objectNode",
                                                                                          "propertyNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              0
                                                                                            ],
                                                                                            "str": "process",
                                                                                            "label": "objectNode",
                                                                                            "name": "identifier"
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              1
                                                                                            ],
                                                                                            "str": "env",
                                                                                            "label": "propertyNode",
                                                                                            "name": "property_identifier"
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1
                                                                                        ],
                                                                                        "str": "NODE_ENV",
                                                                                        "label": "propertyNode",
                                                                                        "name": "property_identifier"
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      1
                                                                                    ],
                                                                                    "str": "'development'",
                                                                                    "label": "rightNode",
                                                                                    "name": "string",
                                                                                    "childrenLabels": [
                                                                                      0
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          1,
                                                                                          0
                                                                                        ],
                                                                                        "str": "development",
                                                                                        "label": 0,
                                                                                        "name": "string_fragment"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  1
                                                                                ],
                                                                                "str": "(opts.direction === 'down' && opts.result instanceof Error)",
                                                                                "label": "rightNode",
                                                                                "name": "parenthesized_expression",
                                                                                "childrenLabels": [
                                                                                  0
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      0
                                                                                    ],
                                                                                    "str": "opts.direction === 'down' && opts.result instanceof Error",
                                                                                    "label": 0,
                                                                                    "name": "binary_expression",
                                                                                    "childrenLabels": [
                                                                                      "leftNode",
                                                                                      "rightNode"
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "opts.direction === 'down'",
                                                                                        "label": "leftNode",
                                                                                        "name": "binary_expression",
                                                                                        "childrenLabels": [
                                                                                          "leftNode",
                                                                                          "rightNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              0
                                                                                            ],
                                                                                            "str": "opts.direction",
                                                                                            "label": "leftNode",
                                                                                            "name": "member_expression",
                                                                                            "childrenLabels": [
                                                                                              "objectNode",
                                                                                              "propertyNode"
                                                                                            ],
                                                                                            "children": [
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0
                                                                                                ],
                                                                                                "str": "opts",
                                                                                                "label": "objectNode",
                                                                                                "name": "identifier"
                                                                                              },
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1
                                                                                                ],
                                                                                                "str": "direction",
                                                                                                "label": "propertyNode",
                                                                                                "name": "property_identifier"
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1
                                                                                            ],
                                                                                            "str": "'down'",
                                                                                            "label": "rightNode",
                                                                                            "name": "string",
                                                                                            "childrenLabels": [
                                                                                              0
                                                                                            ],
                                                                                            "children": [
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  0
                                                                                                ],
                                                                                                "str": "down",
                                                                                                "label": 0,
                                                                                                "name": "string_fragment"
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          1
                                                                                        ],
                                                                                        "str": "opts.result instanceof Error",
                                                                                        "label": "rightNode",
                                                                                        "name": "binary_expression",
                                                                                        "childrenLabels": [
                                                                                          "leftNode",
                                                                                          "rightNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              1,
                                                                                              0
                                                                                            ],
                                                                                            "str": "opts.result",
                                                                                            "label": "leftNode",
                                                                                            "name": "member_expression",
                                                                                            "childrenLabels": [
                                                                                              "objectNode",
                                                                                              "propertyNode"
                                                                                            ],
                                                                                            "children": [
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0
                                                                                                ],
                                                                                                "str": "opts",
                                                                                                "label": "objectNode",
                                                                                                "name": "identifier"
                                                                                              },
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  1,
                                                                                                  1,
                                                                                                  0,
                                                                                                  1,
                                                                                                  0,
                                                                                                  1
                                                                                                ],
                                                                                                "str": "result",
                                                                                                "label": "propertyNode",
                                                                                                "name": "property_identifier"
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1,
                                                                                              1,
                                                                                              0,
                                                                                              1,
                                                                                              1
                                                                                            ],
                                                                                            "str": "Error",
                                                                                            "label": "rightNode",
                                                                                            "name": "identifier"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          0,
                                                          2,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          2
                                                        ],
                                                        "str": "httpBatchLink({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        })",
                                                        "label": 2,
                                                        "name": "call_expression",
                                                        "childrenLabels": [
                                                          "functionNode",
                                                          "argumentsNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              3,
                                                              1,
                                                              2,
                                                              0
                                                            ],
                                                            "str": "httpBatchLink",
                                                            "label": "functionNode",
                                                            "name": "identifier"
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              3,
                                                              1,
                                                              2,
                                                              1
                                                            ],
                                                            "str": "({\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        })",
                                                            "label": "argumentsNode",
                                                            "name": "arguments",
                                                            "childrenLabels": [
                                                              0
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  0,
                                                                  2,
                                                                  1,
                                                                  0,
                                                                  3,
                                                                  1,
                                                                  2,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "{\n          url: `${getBaseUrl()}/api/trpc`,\n          /**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */\n          headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          },\n        }",
                                                                "label": 0,
                                                                "name": "object",
                                                                "childrenLabels": [
                                                                  0,
                                                                  1,
                                                                  2
                                                                ],
                                                                "children": [
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      0,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      3,
                                                                      1,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      0
                                                                    ],
                                                                    "str": "url: `${getBaseUrl()}/api/trpc`",
                                                                    "label": 0,
                                                                    "name": "pair",
                                                                    "childrenLabels": [
                                                                      "keyNode",
                                                                      "valueNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          0
                                                                        ],
                                                                        "str": "url",
                                                                        "label": "keyNode",
                                                                        "name": "property_identifier"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1
                                                                        ],
                                                                        "str": "`${getBaseUrl()}/api/trpc`",
                                                                        "label": "valueNode",
                                                                        "name": "template_string",
                                                                        "childrenLabels": [
                                                                          0
                                                                        ],
                                                                        "children": [
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              0
                                                                            ],
                                                                            "str": "${getBaseUrl()}",
                                                                            "label": 0,
                                                                            "name": "template_substitution",
                                                                            "childrenLabels": [
                                                                              0
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  0
                                                                                ],
                                                                                "str": "getBaseUrl()",
                                                                                "label": 0,
                                                                                "name": "call_expression",
                                                                                "childrenLabels": [
                                                                                  "functionNode",
                                                                                  "argumentsNode"
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "getBaseUrl",
                                                                                    "label": "functionNode",
                                                                                    "name": "identifier"
                                                                                  },
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1
                                                                                    ],
                                                                                    "str": "()",
                                                                                    "label": "argumentsNode",
                                                                                    "name": "arguments"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      0,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      3,
                                                                      1,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      1
                                                                    ],
                                                                    "str": "/**\n           * Set custom request headers on every request from tRPC\n           * @link https://trpc.io/docs/ssr\n           */",
                                                                    "label": 1,
                                                                    "name": "comment"
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      0,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      3,
                                                                      1,
                                                                      2,
                                                                      1,
                                                                      0,
                                                                      2
                                                                    ],
                                                                    "str": "headers() {\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          }",
                                                                    "label": 2,
                                                                    "name": "method_definition",
                                                                    "childrenLabels": [
                                                                      "nameNode",
                                                                      "parametersNode",
                                                                      "bodyNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          2,
                                                                          0
                                                                        ],
                                                                        "str": "headers",
                                                                        "label": "nameNode",
                                                                        "name": "property_identifier"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          2,
                                                                          1
                                                                        ],
                                                                        "str": "()",
                                                                        "label": "parametersNode",
                                                                        "name": "formal_parameters"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          0,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          3,
                                                                          1,
                                                                          2,
                                                                          1,
                                                                          0,
                                                                          2,
                                                                          2
                                                                        ],
                                                                        "str": "{\n            if (!ctx?.req?.headers) {\n              return {};\n            }\n            // To use SSR properly, you need to forward the client's headers to the server\n            // This is so you can pass through things like cookies when we're server-side rendering\n\n            const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;\n            return headers;\n          }",
                                                                        "label": "bodyNode",
                                                                        "name": "statement_block",
                                                                        "childrenLabels": [
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          3,
                                                                          4
                                                                        ],
                                                                        "children": [
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              2,
                                                                              2,
                                                                              0
                                                                            ],
                                                                            "str": "if (!ctx?.req?.headers) {\n              return {};\n            }",
                                                                            "label": 0,
                                                                            "name": "if_statement",
                                                                            "childrenLabels": [
                                                                              "conditionNode",
                                                                              "consequenceNode"
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  2,
                                                                                  2,
                                                                                  0,
                                                                                  0
                                                                                ],
                                                                                "str": "(!ctx?.req?.headers)",
                                                                                "label": "conditionNode",
                                                                                "name": "parenthesized_expression",
                                                                                "childrenLabels": [
                                                                                  0
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      2,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "!ctx?.req?.headers",
                                                                                    "label": 0,
                                                                                    "name": "unary_expression",
                                                                                    "childrenLabels": [
                                                                                      "argumentNode"
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "ctx?.req?.headers",
                                                                                        "label": "argumentNode",
                                                                                        "name": "member_expression",
                                                                                        "childrenLabels": [
                                                                                          "objectNode",
                                                                                          "optionalChainNode",
                                                                                          "propertyNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              0
                                                                                            ],
                                                                                            "str": "ctx?.req",
                                                                                            "label": "objectNode",
                                                                                            "name": "member_expression",
                                                                                            "childrenLabels": [
                                                                                              "objectNode",
                                                                                              "optionalChainNode",
                                                                                              "propertyNode"
                                                                                            ],
                                                                                            "children": [
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  2,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0
                                                                                                ],
                                                                                                "str": "ctx",
                                                                                                "label": "objectNode",
                                                                                                "name": "identifier"
                                                                                              },
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  2,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1
                                                                                                ],
                                                                                                "str": "?.",
                                                                                                "label": "optionalChainNode",
                                                                                                "name": "optional_chain"
                                                                                              },
                                                                                              {
                                                                                                "nestedIndex": [
                                                                                                  6,
                                                                                                  0,
                                                                                                  0,
                                                                                                  1,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  3,
                                                                                                  1,
                                                                                                  2,
                                                                                                  1,
                                                                                                  0,
                                                                                                  2,
                                                                                                  2,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  0,
                                                                                                  2
                                                                                                ],
                                                                                                "str": "req",
                                                                                                "label": "propertyNode",
                                                                                                "name": "property_identifier"
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              1
                                                                                            ],
                                                                                            "str": "?.",
                                                                                            "label": "optionalChainNode",
                                                                                            "name": "optional_chain"
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              0,
                                                                                              2
                                                                                            ],
                                                                                            "str": "headers",
                                                                                            "label": "propertyNode",
                                                                                            "name": "property_identifier"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  2,
                                                                                  2,
                                                                                  0,
                                                                                  1
                                                                                ],
                                                                                "str": "{\n              return {};\n            }",
                                                                                "label": "consequenceNode",
                                                                                "name": "statement_block",
                                                                                "childrenLabels": [
                                                                                  0
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      2,
                                                                                      2,
                                                                                      0,
                                                                                      1,
                                                                                      0
                                                                                    ],
                                                                                    "str": "return {};",
                                                                                    "label": 0,
                                                                                    "name": "return_statement",
                                                                                    "childrenLabels": [
                                                                                      0
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          0,
                                                                                          1,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "{}",
                                                                                        "label": 0,
                                                                                        "name": "object"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              2,
                                                                              2,
                                                                              1
                                                                            ],
                                                                            "str": "// To use SSR properly, you need to forward the client's headers to the server",
                                                                            "label": 1,
                                                                            "name": "comment"
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              2,
                                                                              2,
                                                                              2
                                                                            ],
                                                                            "str": "// This is so you can pass through things like cookies when we're server-side rendering",
                                                                            "label": 2,
                                                                            "name": "comment"
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              2,
                                                                              2,
                                                                              3
                                                                            ],
                                                                            "str": "const {\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers;",
                                                                            "label": 3,
                                                                            "name": "lexical_declaration",
                                                                            "childrenLabels": [
                                                                              0
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  2,
                                                                                  2,
                                                                                  3,
                                                                                  0
                                                                                ],
                                                                                "str": "{\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            } = ctx.req.headers",
                                                                                "label": 0,
                                                                                "name": "variable_declarator",
                                                                                "childrenLabels": [
                                                                                  "nameNode",
                                                                                  "valueNode"
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      2,
                                                                                      2,
                                                                                      3,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "{\n              // If you're using Node 18 before 18.15.0, omit the \"connection\" header\n              connection: _connection,\n              ...headers\n            }",
                                                                                    "label": "nameNode",
                                                                                    "name": "object_pattern",
                                                                                    "childrenLabels": [
                                                                                      0,
                                                                                      1,
                                                                                      2
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          3,
                                                                                          0,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "// If you're using Node 18 before 18.15.0, omit the \"connection\" header",
                                                                                        "label": 0,
                                                                                        "name": "comment"
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          3,
                                                                                          0,
                                                                                          0,
                                                                                          1
                                                                                        ],
                                                                                        "str": "connection: _connection",
                                                                                        "label": 1,
                                                                                        "name": "pair_pattern",
                                                                                        "childrenLabels": [
                                                                                          "keyNode",
                                                                                          "valueNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              3,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              0
                                                                                            ],
                                                                                            "str": "connection",
                                                                                            "label": "keyNode",
                                                                                            "name": "property_identifier"
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              3,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              1
                                                                                            ],
                                                                                            "str": "_connection",
                                                                                            "label": "valueNode",
                                                                                            "name": "identifier"
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          3,
                                                                                          0,
                                                                                          0,
                                                                                          2
                                                                                        ],
                                                                                        "str": "...headers",
                                                                                        "label": 2,
                                                                                        "name": "rest_pattern",
                                                                                        "childrenLabels": [
                                                                                          0
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              3,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              0
                                                                                            ],
                                                                                            "str": "headers",
                                                                                            "label": 0,
                                                                                            "name": "identifier"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      6,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      3,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      2,
                                                                                      2,
                                                                                      3,
                                                                                      0,
                                                                                      1
                                                                                    ],
                                                                                    "str": "ctx.req.headers",
                                                                                    "label": "valueNode",
                                                                                    "name": "member_expression",
                                                                                    "childrenLabels": [
                                                                                      "objectNode",
                                                                                      "propertyNode"
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          3,
                                                                                          0,
                                                                                          1,
                                                                                          0
                                                                                        ],
                                                                                        "str": "ctx.req",
                                                                                        "label": "objectNode",
                                                                                        "name": "member_expression",
                                                                                        "childrenLabels": [
                                                                                          "objectNode",
                                                                                          "propertyNode"
                                                                                        ],
                                                                                        "children": [
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              3,
                                                                                              0,
                                                                                              1,
                                                                                              0,
                                                                                              0
                                                                                            ],
                                                                                            "str": "ctx",
                                                                                            "label": "objectNode",
                                                                                            "name": "identifier"
                                                                                          },
                                                                                          {
                                                                                            "nestedIndex": [
                                                                                              6,
                                                                                              0,
                                                                                              0,
                                                                                              1,
                                                                                              2,
                                                                                              0,
                                                                                              0,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              3,
                                                                                              1,
                                                                                              2,
                                                                                              1,
                                                                                              0,
                                                                                              2,
                                                                                              2,
                                                                                              3,
                                                                                              0,
                                                                                              1,
                                                                                              0,
                                                                                              1
                                                                                            ],
                                                                                            "str": "req",
                                                                                            "label": "propertyNode",
                                                                                            "name": "property_identifier"
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          6,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          3,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          0,
                                                                                          2,
                                                                                          2,
                                                                                          3,
                                                                                          0,
                                                                                          1,
                                                                                          1
                                                                                        ],
                                                                                        "str": "headers",
                                                                                        "label": "propertyNode",
                                                                                        "name": "property_identifier"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              6,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              2,
                                                                              0,
                                                                              0,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              3,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0,
                                                                              2,
                                                                              2,
                                                                              4
                                                                            ],
                                                                            "str": "return headers;",
                                                                            "label": 4,
                                                                            "name": "return_statement",
                                                                            "childrenLabels": [
                                                                              0
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  6,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  2,
                                                                                  0,
                                                                                  0,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  3,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  2,
                                                                                  2,
                                                                                  4,
                                                                                  0
                                                                                ],
                                                                                "str": "headers",
                                                                                "label": 0,
                                                                                "name": "identifier"
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  4
                                                ],
                                                "str": "/**\n       * @link https://tanstack.com/query/v4/docs/react/reference/QueryClient\n       */",
                                                "label": 4,
                                                "name": "comment"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  5
                                                ],
                                                "str": "// queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },",
                                                "label": 5,
                                                "name": "comment"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  6,
                                  0,
                                  0,
                                  1,
                                  2,
                                  0,
                                  1
                                ],
                                "str": "/**\n   * @link https://trpc.io/docs/ssr\n   */",
                                "label": 1,
                                "name": "comment"
                              },
                              {
                                "nestedIndex": [
                                  6,
                                  0,
                                  0,
                                  1,
                                  2,
                                  0,
                                  2
                                ],
                                "str": "ssr: true",
                                "label": 2,
                                "name": "pair",
                                "childrenLabels": [
                                  "keyNode",
                                  "valueNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      2,
                                      0
                                    ],
                                    "str": "ssr",
                                    "label": "keyNode",
                                    "name": "property_identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      2,
                                      1
                                    ],
                                    "str": "true",
                                    "label": "valueNode",
                                    "name": "true"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  6,
                                  0,
                                  0,
                                  1,
                                  2,
                                  0,
                                  3
                                ],
                                "str": "/**\n   * Set headers or status code when doing SSR\n   */",
                                "label": 3,
                                "name": "comment"
                              },
                              {
                                "nestedIndex": [
                                  6,
                                  0,
                                  0,
                                  1,
                                  2,
                                  0,
                                  4
                                ],
                                "str": "responseMeta(opts) {\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  }",
                                "label": 4,
                                "name": "method_definition",
                                "childrenLabels": [
                                  "nameNode",
                                  "parametersNode",
                                  "bodyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      4,
                                      0
                                    ],
                                    "str": "responseMeta",
                                    "label": "nameNode",
                                    "name": "property_identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      4,
                                      1
                                    ],
                                    "str": "(opts)",
                                    "label": "parametersNode",
                                    "name": "formal_parameters",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          1,
                                          0
                                        ],
                                        "str": "opts",
                                        "label": 0,
                                        "name": "required_parameter",
                                        "childrenLabels": [
                                          "patternNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "opts",
                                            "label": "patternNode",
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      6,
                                      0,
                                      0,
                                      1,
                                      2,
                                      0,
                                      4,
                                      2
                                    ],
                                    "str": "{\n    const ctx = opts.ctx as SSRContext;\n\n    if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }\n\n    const error = opts.clientErrors[0];\n    if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }\n\n    // for app caching with SSR see https://trpc.io/docs/caching\n\n    return {};\n  }",
                                    "label": "bodyNode",
                                    "name": "statement_block",
                                    "childrenLabels": [
                                      0,
                                      1,
                                      2,
                                      3,
                                      4,
                                      5
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          0
                                        ],
                                        "str": "const ctx = opts.ctx as SSRContext;",
                                        "label": 0,
                                        "name": "lexical_declaration",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              0,
                                              0
                                            ],
                                            "str": "ctx = opts.ctx as SSRContext",
                                            "label": 0,
                                            "name": "variable_declarator",
                                            "childrenLabels": [
                                              "nameNode",
                                              "valueNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "ctx",
                                                "label": "nameNode",
                                                "name": "identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  0,
                                                  0,
                                                  1
                                                ],
                                                "str": "opts.ctx as SSRContext",
                                                "label": "valueNode",
                                                "name": "as_expression",
                                                "childrenLabels": [
                                                  0,
                                                  1
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      0,
                                                      0,
                                                      1,
                                                      0
                                                    ],
                                                    "str": "opts.ctx",
                                                    "label": 0,
                                                    "name": "member_expression",
                                                    "childrenLabels": [
                                                      "objectNode",
                                                      "propertyNode"
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          0,
                                                          0,
                                                          1,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "opts",
                                                        "label": "objectNode",
                                                        "name": "identifier"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          0,
                                                          0,
                                                          1,
                                                          0,
                                                          1
                                                        ],
                                                        "str": "ctx",
                                                        "label": "propertyNode",
                                                        "name": "property_identifier"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      0,
                                                      0,
                                                      1,
                                                      1
                                                    ],
                                                    "str": "SSRContext",
                                                    "label": 1,
                                                    "name": "type_identifier"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          1
                                        ],
                                        "str": "if (ctx.status) {\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }",
                                        "label": 1,
                                        "name": "if_statement",
                                        "childrenLabels": [
                                          "conditionNode",
                                          "consequenceNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              1,
                                              0
                                            ],
                                            "str": "(ctx.status)",
                                            "label": "conditionNode",
                                            "name": "parenthesized_expression",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "ctx.status",
                                                "label": 0,
                                                "name": "member_expression",
                                                "childrenLabels": [
                                                  "objectNode",
                                                  "propertyNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      1,
                                                      0,
                                                      0,
                                                      0
                                                    ],
                                                    "str": "ctx",
                                                    "label": "objectNode",
                                                    "name": "identifier"
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      1,
                                                      0,
                                                      0,
                                                      1
                                                    ],
                                                    "str": "status",
                                                    "label": "propertyNode",
                                                    "name": "property_identifier"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              1,
                                              1
                                            ],
                                            "str": "{\n      // If HTTP status set, propagate that\n      return {\n        status: ctx.status,\n      };\n    }",
                                            "label": "consequenceNode",
                                            "name": "statement_block",
                                            "childrenLabels": [
                                              0,
                                              1
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  1,
                                                  1,
                                                  0
                                                ],
                                                "str": "// If HTTP status set, propagate that",
                                                "label": 0,
                                                "name": "comment"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  1,
                                                  1,
                                                  1
                                                ],
                                                "str": "return {\n        status: ctx.status,\n      };",
                                                "label": 1,
                                                "name": "return_statement",
                                                "childrenLabels": [
                                                  0
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      1,
                                                      1,
                                                      1,
                                                      0
                                                    ],
                                                    "str": "{\n        status: ctx.status,\n      }",
                                                    "label": 0,
                                                    "name": "object",
                                                    "childrenLabels": [
                                                      0
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          1,
                                                          1,
                                                          1,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "status: ctx.status",
                                                        "label": 0,
                                                        "name": "pair",
                                                        "childrenLabels": [
                                                          "keyNode",
                                                          "valueNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              4,
                                                              2,
                                                              1,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              0
                                                            ],
                                                            "str": "status",
                                                            "label": "keyNode",
                                                            "name": "property_identifier"
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              4,
                                                              2,
                                                              1,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              1
                                                            ],
                                                            "str": "ctx.status",
                                                            "label": "valueNode",
                                                            "name": "member_expression",
                                                            "childrenLabels": [
                                                              "objectNode",
                                                              "propertyNode"
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  4,
                                                                  2,
                                                                  1,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "ctx",
                                                                "label": "objectNode",
                                                                "name": "identifier"
                                                              },
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  4,
                                                                  2,
                                                                  1,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  1
                                                                ],
                                                                "str": "status",
                                                                "label": "propertyNode",
                                                                "name": "property_identifier"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          2
                                        ],
                                        "str": "const error = opts.clientErrors[0];",
                                        "label": 2,
                                        "name": "lexical_declaration",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              2,
                                              0
                                            ],
                                            "str": "error = opts.clientErrors[0]",
                                            "label": 0,
                                            "name": "variable_declarator",
                                            "childrenLabels": [
                                              "nameNode",
                                              "valueNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  2,
                                                  0,
                                                  0
                                                ],
                                                "str": "error",
                                                "label": "nameNode",
                                                "name": "identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  2,
                                                  0,
                                                  1
                                                ],
                                                "str": "opts.clientErrors[0]",
                                                "label": "valueNode",
                                                "name": "subscript_expression",
                                                "childrenLabels": [
                                                  "objectNode",
                                                  "indexNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      2,
                                                      0,
                                                      1,
                                                      0
                                                    ],
                                                    "str": "opts.clientErrors",
                                                    "label": "objectNode",
                                                    "name": "member_expression",
                                                    "childrenLabels": [
                                                      "objectNode",
                                                      "propertyNode"
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          2,
                                                          0,
                                                          1,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "opts",
                                                        "label": "objectNode",
                                                        "name": "identifier"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          2,
                                                          0,
                                                          1,
                                                          0,
                                                          1
                                                        ],
                                                        "str": "clientErrors",
                                                        "label": "propertyNode",
                                                        "name": "property_identifier"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      2,
                                                      0,
                                                      1,
                                                      1
                                                    ],
                                                    "str": "0",
                                                    "label": "indexNode",
                                                    "name": "number"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          3
                                        ],
                                        "str": "if (error) {\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }",
                                        "label": 3,
                                        "name": "if_statement",
                                        "childrenLabels": [
                                          "conditionNode",
                                          "consequenceNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              3,
                                              0
                                            ],
                                            "str": "(error)",
                                            "label": "conditionNode",
                                            "name": "parenthesized_expression",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  3,
                                                  0,
                                                  0
                                                ],
                                                "str": "error",
                                                "label": 0,
                                                "name": "identifier"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              3,
                                              1
                                            ],
                                            "str": "{\n      // Propagate http first error from API calls\n      return {\n        status: error.data?.httpStatus ?? 500,\n      };\n    }",
                                            "label": "consequenceNode",
                                            "name": "statement_block",
                                            "childrenLabels": [
                                              0,
                                              1
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  3,
                                                  1,
                                                  0
                                                ],
                                                "str": "// Propagate http first error from API calls",
                                                "label": 0,
                                                "name": "comment"
                                              },
                                              {
                                                "nestedIndex": [
                                                  6,
                                                  0,
                                                  0,
                                                  1,
                                                  2,
                                                  0,
                                                  4,
                                                  2,
                                                  3,
                                                  1,
                                                  1
                                                ],
                                                "str": "return {\n        status: error.data?.httpStatus ?? 500,\n      };",
                                                "label": 1,
                                                "name": "return_statement",
                                                "childrenLabels": [
                                                  0
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      6,
                                                      0,
                                                      0,
                                                      1,
                                                      2,
                                                      0,
                                                      4,
                                                      2,
                                                      3,
                                                      1,
                                                      1,
                                                      0
                                                    ],
                                                    "str": "{\n        status: error.data?.httpStatus ?? 500,\n      }",
                                                    "label": 0,
                                                    "name": "object",
                                                    "childrenLabels": [
                                                      0
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          6,
                                                          0,
                                                          0,
                                                          1,
                                                          2,
                                                          0,
                                                          4,
                                                          2,
                                                          3,
                                                          1,
                                                          1,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "status: error.data?.httpStatus ?? 500",
                                                        "label": 0,
                                                        "name": "pair",
                                                        "childrenLabels": [
                                                          "keyNode",
                                                          "valueNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              4,
                                                              2,
                                                              3,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              0
                                                            ],
                                                            "str": "status",
                                                            "label": "keyNode",
                                                            "name": "property_identifier"
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              6,
                                                              0,
                                                              0,
                                                              1,
                                                              2,
                                                              0,
                                                              4,
                                                              2,
                                                              3,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              1
                                                            ],
                                                            "str": "error.data?.httpStatus ?? 500",
                                                            "label": "valueNode",
                                                            "name": "binary_expression",
                                                            "childrenLabels": [
                                                              "leftNode",
                                                              "rightNode"
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  4,
                                                                  2,
                                                                  3,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "error.data?.httpStatus",
                                                                "label": "leftNode",
                                                                "name": "member_expression",
                                                                "childrenLabels": [
                                                                  "objectNode",
                                                                  "optionalChainNode",
                                                                  "propertyNode"
                                                                ],
                                                                "children": [
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      4,
                                                                      2,
                                                                      3,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      0
                                                                    ],
                                                                    "str": "error.data",
                                                                    "label": "objectNode",
                                                                    "name": "member_expression",
                                                                    "childrenLabels": [
                                                                      "objectNode",
                                                                      "propertyNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          4,
                                                                          2,
                                                                          3,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          0
                                                                        ],
                                                                        "str": "error",
                                                                        "label": "objectNode",
                                                                        "name": "identifier"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          6,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          2,
                                                                          0,
                                                                          4,
                                                                          2,
                                                                          3,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1
                                                                        ],
                                                                        "str": "data",
                                                                        "label": "propertyNode",
                                                                        "name": "property_identifier"
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      4,
                                                                      2,
                                                                      3,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1
                                                                    ],
                                                                    "str": "?.",
                                                                    "label": "optionalChainNode",
                                                                    "name": "optional_chain"
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      6,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      2,
                                                                      0,
                                                                      4,
                                                                      2,
                                                                      3,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      2
                                                                    ],
                                                                    "str": "httpStatus",
                                                                    "label": "propertyNode",
                                                                    "name": "property_identifier"
                                                                  }
                                                                ]
                                                              },
                                                              {
                                                                "nestedIndex": [
                                                                  6,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  2,
                                                                  0,
                                                                  4,
                                                                  2,
                                                                  3,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  1
                                                                ],
                                                                "str": "500",
                                                                "label": "rightNode",
                                                                "name": "number"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          4
                                        ],
                                        "str": "// for app caching with SSR see https://trpc.io/docs/caching",
                                        "label": 4,
                                        "name": "comment"
                                      },
                                      {
                                        "nestedIndex": [
                                          6,
                                          0,
                                          0,
                                          1,
                                          2,
                                          0,
                                          4,
                                          2,
                                          5
                                        ],
                                        "str": "return {};",
                                        "label": 5,
                                        "name": "return_statement",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              6,
                                              0,
                                              0,
                                              1,
                                              2,
                                              0,
                                              4,
                                              2,
                                              5,
                                              0
                                            ],
                                            "str": "{}",
                                            "label": 0,
                                            "name": "object"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          7
        ],
        "str": "export type RouterInput = inferRouterInputs<AppRouter>;",
        "label": 7,
        "name": "export_statement",
        "childrenLabels": [
          "declarationNode"
        ],
        "children": [
          {
            "nestedIndex": [
              7,
              0
            ],
            "str": "type RouterInput = inferRouterInputs<AppRouter>;",
            "label": "declarationNode",
            "name": "type_alias_declaration",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  7,
                  0,
                  0
                ],
                "str": "RouterInput",
                "label": "nameNode",
                "name": "type_identifier"
              },
              {
                "nestedIndex": [
                  7,
                  0,
                  1
                ],
                "str": "inferRouterInputs<AppRouter>",
                "label": "valueNode",
                "name": "generic_type",
                "childrenLabels": [
                  "nameNode",
                  "typeArgumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      7,
                      0,
                      1,
                      0
                    ],
                    "str": "inferRouterInputs",
                    "label": "nameNode",
                    "name": "type_identifier"
                  },
                  {
                    "nestedIndex": [
                      7,
                      0,
                      1,
                      1
                    ],
                    "str": "<AppRouter>",
                    "label": "typeArgumentsNode",
                    "name": "type_arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          7,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "AppRouter",
                        "label": 0,
                        "name": "type_identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          8
        ],
        "str": "export type RouterOutput = inferRouterOutputs<AppRouter>;",
        "label": 8,
        "name": "export_statement",
        "childrenLabels": [
          "declarationNode"
        ],
        "children": [
          {
            "nestedIndex": [
              8,
              0
            ],
            "str": "type RouterOutput = inferRouterOutputs<AppRouter>;",
            "label": "declarationNode",
            "name": "type_alias_declaration",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  8,
                  0,
                  0
                ],
                "str": "RouterOutput",
                "label": "nameNode",
                "name": "type_identifier"
              },
              {
                "nestedIndex": [
                  8,
                  0,
                  1
                ],
                "str": "inferRouterOutputs<AppRouter>",
                "label": "valueNode",
                "name": "generic_type",
                "childrenLabels": [
                  "nameNode",
                  "typeArgumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      8,
                      0,
                      1,
                      0
                    ],
                    "str": "inferRouterOutputs",
                    "label": "nameNode",
                    "name": "type_identifier"
                  },
                  {
                    "nestedIndex": [
                      8,
                      0,
                      1,
                      1
                    ],
                    "str": "<AppRouter>",
                    "label": "typeArgumentsNode",
                    "name": "type_arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          8,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "AppRouter",
                        "label": 0,
                        "name": "type_identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "imports": [
    "import { httpBatchLink, loggerLink } from '@trpc/client';",
    "import { createTRPCNext } from '@trpc/next';",
    "import { inferRouterInputs, inferRouterOutputs } from '@trpc/server';",
    "import { NextPageContext } from 'next';",
    "import type { AppRouter } from '~/server/routers/_app';",
    "import { transformer } from './transformer';"
  ],
  "filePath": "../example-todo-list/src/utils/trpc.ts",
  "isTest": false,
  "isConfig": false
}