{
  "ast": {
    "nestedIndex": [],
    "label": "FILE",
    "name": "root",
    "str": "import { trpc } from '../utils/trpc';\nimport { NextPageWithLayout } from './_app';\nimport { inferProcedureInput } from '@trpc/server';\nimport Link from 'next/link';\nimport { Fragment } from 'react';\nimport type { AppRouter } from '~/server/routers/_app';\n\nconst IndexPage: NextPageWithLayout = () => {\n  const utils = trpc.useContext();\n  const postsQuery = trpc.post.list.useInfiniteQuery(\n    {\n      limit: 5,\n    },\n    {\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    },\n  );\n\n  const addPost = trpc.post.add.useMutation({\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  });\n\n  // prefetch all posts for instant navigation\n  // useEffect(() => {\n  //   const allPosts = postsQuery.data?.pages.flatMap((page) => page.items) ?? [];\n  //   for (const { id } of allPosts) {\n  //     void utils.post.byId.prefetch({ id });\n  //   }\n  // }, [postsQuery.data, utils]);\n\n  return (\n    <div className=\"flex flex-col bg-gray-800 py-8\">\n      <h1 className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck, check{' '}\n        <Link className=\"underline\" href=\"https://trpc.io\">\n          the docs\n        </Link>\n        , write a message in our{' '}\n        <Link className=\"underline\" href=\"https://trpc.io/discord\">\n          Discord-channel\n        </Link>\n        , or write a message in{' '}\n        <Link\n          className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"\n        >\n          GitHub Discussions\n        </Link>\n        .\n      </p>\n\n      <div className=\"flex flex-col py-8 items-start gap-y-2\">\n        <div className=\"flex flex-col\"></div>\n        <h2 className=\"text-3xl font-semibold\">\n          Latest Posts\n          {postsQuery.status === 'loading' && '(loading)'}\n        </h2>\n\n        <button\n          className=\"bg-gray-900 p-2 rounded-md font-semibold disabled:bg-gray-700 disabled:text-gray-400\"\n          onClick={() => postsQuery.fetchPreviousPage()}\n          disabled={\n            !postsQuery.hasPreviousPage || postsQuery.isFetchingPreviousPage\n          }\n        >\n          {postsQuery.isFetchingPreviousPage\n            ? 'Loading more...'\n            : postsQuery.hasPreviousPage\n            ? 'Load More'\n            : 'Nothing more to load'}\n        </button>\n\n        {postsQuery.data?.pages.map((page, index) => (\n          <Fragment key={page.items[0]?.id || index}>\n            {page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))}\n          </Fragment>\n        ))}\n      </div>\n\n      <hr />\n\n      <div className=\"flex flex-col py-8 items-center\">\n        <h2 className=\"text-3xl font-semibold pb-2\">Add a Post</h2>\n\n        <form\n          className=\"py-2 w-4/6\"\n          onSubmit={async (e) => {\n            /**\n             * In a real app you probably don't want to use this manually\n             * Checkout React Hook Form - it works great with tRPC\n             * @see https://react-hook-form.com/\n             * @see https://kitchen-sink.trpc.io/react-hook-form\n             */\n            e.preventDefault();\n            const $form = e.currentTarget;\n            const values = Object.fromEntries(new FormData($form));\n            type Input = inferProcedureInput<AppRouter['post']['add']>;\n            //    ^?\n            const input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            };\n            try {\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            } catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }\n          }}\n        >\n          <div className=\"flex flex-col gap-y-4 font-semibold\">\n            <input\n              className=\"focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Title\"\n              disabled={addPost.isLoading}\n            />\n            <textarea\n              className=\"resize-none focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"\n              id=\"text\"\n              name=\"text\"\n              placeholder=\"Text\"\n              disabled={addPost.isLoading}\n              rows={6}\n            />\n\n            <div className=\"flex justify-center\">\n              <input\n                className=\"cursor-pointer bg-gray-900 p-2 rounded-md px-16\"\n                type=\"submit\"\n                disabled={addPost.isLoading}\n              />\n              {addPost.error && (\n                <p style={{ color: 'red' }}>{addPost.error.message}</p>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;\n\n/**\n * If you want to statically render this page\n * - Export `appRouter` & `createContext` from [trpc].ts\n * - Make the `opts` object optional on `createContext()`\n *\n * @link https://trpc.io/docs/ssg\n */\n// export const getStaticProps = async (\n//   context: GetStaticPropsContext<{ filter: string }>,\n// ) => {\n//   const ssg = createServerSideHelpers({\n//     router: appRouter,\n//     ctx: await createContext(),\n//   });\n//\n//   await ssg.post.all.fetch();\n//\n//   return {\n//     props: {\n//       trpcState: ssg.dehydrate(),\n//       filter: context.params?.filter ?? 'all',\n//     },\n//     revalidate: 1,\n//   };\n// };\n",
    "childrenLabels": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99
    ],
    "children": [
      {
        "nestedIndex": [
          0
        ],
        "str": "import { trpc } from '../utils/trpc';",
        "label": 0,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              0,
              0
            ],
            "str": "{ trpc }",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  0,
                  0,
                  0
                ],
                "str": "{ trpc }",
                "label": 0,
                "name": "named_imports",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      0,
                      0,
                      0,
                      0
                    ],
                    "str": "trpc",
                    "label": 0,
                    "name": "import_specifier",
                    "childrenLabels": [
                      "nameNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "trpc",
                        "label": "nameNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              0,
              1
            ],
            "str": "'../utils/trpc'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  0,
                  1,
                  0
                ],
                "str": "../utils/trpc",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          1
        ],
        "str": "import { NextPageWithLayout } from './_app';",
        "label": 1,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              1,
              0
            ],
            "str": "{ NextPageWithLayout }",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  1,
                  0,
                  0
                ],
                "str": "{ NextPageWithLayout }",
                "label": 0,
                "name": "named_imports",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      1,
                      0,
                      0,
                      0
                    ],
                    "str": "NextPageWithLayout",
                    "label": 0,
                    "name": "import_specifier",
                    "childrenLabels": [
                      "nameNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          1,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "NextPageWithLayout",
                        "label": "nameNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              1,
              1
            ],
            "str": "'./_app'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  1,
                  1,
                  0
                ],
                "str": "./_app",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          2
        ],
        "str": "import { inferProcedureInput } from '@trpc/server';",
        "label": 2,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              2,
              0
            ],
            "str": "{ inferProcedureInput }",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  2,
                  0,
                  0
                ],
                "str": "{ inferProcedureInput }",
                "label": 0,
                "name": "named_imports",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      2,
                      0,
                      0,
                      0
                    ],
                    "str": "inferProcedureInput",
                    "label": 0,
                    "name": "import_specifier",
                    "childrenLabels": [
                      "nameNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          2,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "inferProcedureInput",
                        "label": "nameNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              2,
              1
            ],
            "str": "'@trpc/server'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  2,
                  1,
                  0
                ],
                "str": "@trpc/server",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          3
        ],
        "str": "import Link from 'next/link';",
        "label": 3,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              3,
              0
            ],
            "str": "Link",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  3,
                  0,
                  0
                ],
                "str": "Link",
                "label": 0,
                "name": "identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              3,
              1
            ],
            "str": "'next/link'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  3,
                  1,
                  0
                ],
                "str": "next/link",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          4
        ],
        "str": "import { Fragment } from 'react';",
        "label": 4,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              4,
              0
            ],
            "str": "{ Fragment }",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  4,
                  0,
                  0
                ],
                "str": "{ Fragment }",
                "label": 0,
                "name": "named_imports",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      4,
                      0,
                      0,
                      0
                    ],
                    "str": "Fragment",
                    "label": 0,
                    "name": "import_specifier",
                    "childrenLabels": [
                      "nameNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          4,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "Fragment",
                        "label": "nameNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              4,
              1
            ],
            "str": "'react'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  4,
                  1,
                  0
                ],
                "str": "react",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          5
        ],
        "str": "import type { AppRouter } from '~/server/routers/_app';",
        "label": 5,
        "name": "import_statement",
        "childrenLabels": [
          0,
          "sourceNode"
        ],
        "children": [
          {
            "nestedIndex": [
              5,
              0
            ],
            "str": "{ AppRouter }",
            "label": 0,
            "name": "import_clause",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  5,
                  0,
                  0
                ],
                "str": "{ AppRouter }",
                "label": 0,
                "name": "named_imports",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      5,
                      0,
                      0,
                      0
                    ],
                    "str": "AppRouter",
                    "label": 0,
                    "name": "import_specifier",
                    "childrenLabels": [
                      "nameNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          5,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "AppRouter",
                        "label": "nameNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              5,
              1
            ],
            "str": "'~/server/routers/_app'",
            "label": "sourceNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  5,
                  1,
                  0
                ],
                "str": "~/server/routers/_app",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          6
        ],
        "str": "IndexPage",
        "label": 6,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          7
        ],
        "str": ": NextPageWithLayout",
        "label": 7,
        "name": "type_annotation",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              7,
              0
            ],
            "str": "NextPageWithLayout",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          8
        ],
        "str": "()",
        "label": 8,
        "name": "formal_parameters"
      },
      {
        "nestedIndex": [
          9
        ],
        "str": "const utils = trpc.useContext();",
        "label": 9,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              9,
              0
            ],
            "str": "utils = trpc.useContext()",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  9,
                  0,
                  0
                ],
                "str": "utils",
                "label": "nameNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  9,
                  0,
                  1
                ],
                "str": "trpc.useContext()",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      9,
                      0,
                      1,
                      0
                    ],
                    "str": "trpc.useContext",
                    "label": "functionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          9,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "trpc",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          9,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "useContext",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      9,
                      0,
                      1,
                      1
                    ],
                    "str": "()",
                    "label": "argumentsNode",
                    "name": "arguments"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          10
        ],
        "str": "const postsQuery = trpc.post.list.useInfiniteQuery(\n    {\n      limit: 5,\n    },\n    {\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    },\n  );",
        "label": 10,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              10,
              0
            ],
            "str": "postsQuery = trpc.post.list.useInfiniteQuery(\n    {\n      limit: 5,\n    },\n    {\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    },\n  )",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  10,
                  0,
                  0
                ],
                "str": "postsQuery",
                "label": "nameNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  10,
                  0,
                  1
                ],
                "str": "trpc.post.list.useInfiniteQuery(\n    {\n      limit: 5,\n    },\n    {\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    },\n  )",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      10,
                      0,
                      1,
                      0
                    ],
                    "str": "trpc.post.list.useInfiniteQuery",
                    "label": "functionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          10,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "trpc.post.list",
                        "label": "objectNode",
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              10,
                              0,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "trpc.post",
                            "label": "objectNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "trpc",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  0,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "post",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              10,
                              0,
                              1,
                              0,
                              0,
                              1
                            ],
                            "str": "list",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          10,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "useInfiniteQuery",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      10,
                      0,
                      1,
                      1
                    ],
                    "str": "(\n    {\n      limit: 5,\n    },\n    {\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    },\n  )",
                    "label": "argumentsNode",
                    "name": "arguments",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          10,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "{\n      limit: 5,\n    }",
                        "label": 0,
                        "name": "object",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              10,
                              0,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "limit: 5",
                            "label": 0,
                            "name": "pair",
                            "childrenLabels": [
                              "keyNode",
                              "valueNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "limit",
                                "label": "keyNode",
                                "name": "property_identifier"
                              },
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "5",
                                "label": "valueNode",
                                "name": "number"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          10,
                          0,
                          1,
                          1,
                          1
                        ],
                        "str": "{\n      getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      },\n    }",
                        "label": 1,
                        "name": "object",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              10,
                              0,
                              1,
                              1,
                              1,
                              0
                            ],
                            "str": "getPreviousPageParam(lastPage) {\n        return lastPage.nextCursor;\n      }",
                            "label": 0,
                            "name": "method_definition",
                            "childrenLabels": [
                              "nameNode",
                              "parametersNode",
                              "bodyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  1,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "getPreviousPageParam",
                                "label": "nameNode",
                                "name": "property_identifier"
                              },
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  1,
                                  1,
                                  0,
                                  1
                                ],
                                "str": "(lastPage)",
                                "label": "parametersNode",
                                "name": "formal_parameters",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      10,
                                      0,
                                      1,
                                      1,
                                      1,
                                      0,
                                      1,
                                      0
                                    ],
                                    "str": "lastPage",
                                    "label": 0,
                                    "name": "required_parameter",
                                    "childrenLabels": [
                                      "patternNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          10,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "lastPage",
                                        "label": "patternNode",
                                        "name": "identifier"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  10,
                                  0,
                                  1,
                                  1,
                                  1,
                                  0,
                                  2
                                ],
                                "str": "{\n        return lastPage.nextCursor;\n      }",
                                "label": "bodyNode",
                                "name": "statement_block",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      10,
                                      0,
                                      1,
                                      1,
                                      1,
                                      0,
                                      2,
                                      0
                                    ],
                                    "str": "return lastPage.nextCursor;",
                                    "label": 0,
                                    "name": "return_statement",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          10,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0,
                                          2,
                                          0,
                                          0
                                        ],
                                        "str": "lastPage.nextCursor",
                                        "label": 0,
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              10,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              2,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "lastPage",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              10,
                                              0,
                                              1,
                                              1,
                                              1,
                                              0,
                                              2,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "nextCursor",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          11
        ],
        "str": "const addPost = trpc.post.add.useMutation({\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  });",
        "label": 11,
        "name": "lexical_declaration",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              11,
              0
            ],
            "str": "addPost = trpc.post.add.useMutation({\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  })",
            "label": 0,
            "name": "variable_declarator",
            "childrenLabels": [
              "nameNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  11,
                  0,
                  0
                ],
                "str": "addPost",
                "label": "nameNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  11,
                  0,
                  1
                ],
                "str": "trpc.post.add.useMutation({\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  })",
                "label": "valueNode",
                "name": "call_expression",
                "childrenLabels": [
                  "functionNode",
                  "argumentsNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      11,
                      0,
                      1,
                      0
                    ],
                    "str": "trpc.post.add.useMutation",
                    "label": "functionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          11,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "trpc.post.add",
                        "label": "objectNode",
                        "name": "member_expression",
                        "childrenLabels": [
                          "objectNode",
                          "propertyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              11,
                              0,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "trpc.post",
                            "label": "objectNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  11,
                                  0,
                                  1,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "trpc",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  11,
                                  0,
                                  1,
                                  0,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "post",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              11,
                              0,
                              1,
                              0,
                              0,
                              1
                            ],
                            "str": "add",
                            "label": "propertyNode",
                            "name": "property_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          11,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "useMutation",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      11,
                      0,
                      1,
                      1
                    ],
                    "str": "({\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  })",
                    "label": "argumentsNode",
                    "name": "arguments",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          11,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "{\n    async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    },\n  }",
                        "label": 0,
                        "name": "object",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              11,
                              0,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "async onSuccess() {\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    }",
                            "label": 0,
                            "name": "method_definition",
                            "childrenLabels": [
                              "nameNode",
                              "parametersNode",
                              "bodyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  11,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "onSuccess",
                                "label": "nameNode",
                                "name": "property_identifier"
                              },
                              {
                                "nestedIndex": [
                                  11,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "()",
                                "label": "parametersNode",
                                "name": "formal_parameters"
                              },
                              {
                                "nestedIndex": [
                                  11,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0,
                                  2
                                ],
                                "str": "{\n      // refetches posts after a post is added\n      await utils.post.list.invalidate();\n    }",
                                "label": "bodyNode",
                                "name": "statement_block",
                                "childrenLabels": [
                                  0,
                                  1
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      11,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0,
                                      2,
                                      0
                                    ],
                                    "str": "// refetches posts after a post is added",
                                    "label": 0,
                                    "name": "comment"
                                  },
                                  {
                                    "nestedIndex": [
                                      11,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0,
                                      2,
                                      1
                                    ],
                                    "str": "await utils.post.list.invalidate();",
                                    "label": 1,
                                    "name": "expression_statement",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          11,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          2,
                                          1,
                                          0
                                        ],
                                        "str": "await utils.post.list.invalidate()",
                                        "label": 0,
                                        "name": "await_expression",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              11,
                                              0,
                                              1,
                                              1,
                                              0,
                                              0,
                                              2,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "utils.post.list.invalidate()",
                                            "label": 0,
                                            "name": "call_expression",
                                            "childrenLabels": [
                                              "functionNode",
                                              "argumentsNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  11,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "utils.post.list.invalidate",
                                                "label": "functionNode",
                                                "name": "member_expression",
                                                "childrenLabels": [
                                                  "objectNode",
                                                  "propertyNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      11,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      0,
                                                      2,
                                                      1,
                                                      0,
                                                      0,
                                                      0,
                                                      0
                                                    ],
                                                    "str": "utils.post.list",
                                                    "label": "objectNode",
                                                    "name": "member_expression",
                                                    "childrenLabels": [
                                                      "objectNode",
                                                      "propertyNode"
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          11,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          0,
                                                          2,
                                                          1,
                                                          0,
                                                          0,
                                                          0,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "utils.post",
                                                        "label": "objectNode",
                                                        "name": "member_expression",
                                                        "childrenLabels": [
                                                          "objectNode",
                                                          "propertyNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              11,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              0,
                                                              0,
                                                              0,
                                                              0,
                                                              0
                                                            ],
                                                            "str": "utils",
                                                            "label": "objectNode",
                                                            "name": "identifier"
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              11,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              2,
                                                              1,
                                                              0,
                                                              0,
                                                              0,
                                                              0,
                                                              0,
                                                              1
                                                            ],
                                                            "str": "post",
                                                            "label": "propertyNode",
                                                            "name": "property_identifier"
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          11,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          0,
                                                          2,
                                                          1,
                                                          0,
                                                          0,
                                                          0,
                                                          0,
                                                          1
                                                        ],
                                                        "str": "list",
                                                        "label": "propertyNode",
                                                        "name": "property_identifier"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      11,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      0,
                                                      2,
                                                      1,
                                                      0,
                                                      0,
                                                      0,
                                                      1
                                                    ],
                                                    "str": "invalidate",
                                                    "label": "propertyNode",
                                                    "name": "property_identifier"
                                                  }
                                                ]
                                              },
                                              {
                                                "nestedIndex": [
                                                  11,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  2,
                                                  1,
                                                  0,
                                                  0,
                                                  1
                                                ],
                                                "str": "()",
                                                "label": "argumentsNode",
                                                "name": "arguments"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          12
        ],
        "str": "// prefetch all posts for instant navigation",
        "label": 12,
        "name": "comment"
      },
      {
        "nestedIndex": [
          13
        ],
        "str": "// useEffect(() => {",
        "label": 13,
        "name": "comment"
      },
      {
        "nestedIndex": [
          14
        ],
        "str": "//   const allPosts = postsQuery.data?.pages.flatMap((page) => page.items) ?? [];",
        "label": 14,
        "name": "comment"
      },
      {
        "nestedIndex": [
          15
        ],
        "str": "//   for (const { id } of allPosts) {",
        "label": 15,
        "name": "comment"
      },
      {
        "nestedIndex": [
          16
        ],
        "str": "//     void utils.post.byId.prefetch({ id });",
        "label": 16,
        "name": "comment"
      },
      {
        "nestedIndex": [
          17
        ],
        "str": "//   }",
        "label": 17,
        "name": "comment"
      },
      {
        "nestedIndex": [
          18
        ],
        "str": "// }, [postsQuery.data, utils]);",
        "label": 18,
        "name": "comment"
      },
      {
        "nestedIndex": [
          19
        ],
        "str": "<div className=\"flex flex-col bg-gray-800 py-8\">\n      <h1 className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
        "label": 19,
        "name": "type_assertion",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              19,
              0
            ],
            "str": "<div",
            "label": 0,
            "name": "type_arguments",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  19,
                  0,
                  0
                ],
                "str": "div",
                "label": 0,
                "name": "type_identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              19,
              1
            ],
            "str": "className=\"flex flex-col bg-gray-800 py-8\">\n      <h1 className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
            "label": 1,
            "name": "assignment_expression",
            "childrenLabels": [
              "leftNode",
              "rightNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  19,
                  1,
                  0
                ],
                "str": "className",
                "label": "leftNode",
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  19,
                  1,
                  1
                ],
                "str": "\"flex flex-col bg-gray-800 py-8\">\n      <h1 className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
                "label": "rightNode",
                "name": "binary_expression",
                "childrenLabels": [
                  "leftNode",
                  "rightNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      19,
                      1,
                      1,
                      0
                    ],
                    "str": "\"flex flex-col bg-gray-800 py-8\"",
                    "label": "leftNode",
                    "name": "string",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          19,
                          1,
                          1,
                          0,
                          0
                        ],
                        "str": "flex flex-col bg-gray-800 py-8",
                        "label": 0,
                        "name": "string_fragment"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      19,
                      1,
                      1,
                      1
                    ],
                    "str": "<h1 className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
                    "label": "rightNode",
                    "name": "type_assertion",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          19,
                          1,
                          1,
                          1,
                          0
                        ],
                        "str": "<h1",
                        "label": 0,
                        "name": "type_arguments",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              19,
                              1,
                              1,
                              1,
                              0,
                              0
                            ],
                            "str": "h1",
                            "label": 0,
                            "name": "type_identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          19,
                          1,
                          1,
                          1,
                          1
                        ],
                        "str": "className=\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
                        "label": 1,
                        "name": "assignment_expression",
                        "childrenLabels": [
                          "leftNode",
                          "rightNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              19,
                              1,
                              1,
                              1,
                              1,
                              0
                            ],
                            "str": "className",
                            "label": "leftNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              19,
                              1,
                              1,
                              1,
                              1,
                              1
                            ],
                            "str": "\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!\n      </h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
                            "label": "rightNode",
                            "name": "binary_expression",
                            "childrenLabels": [
                              "leftNode",
                              "rightNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  19,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter!",
                                "label": "leftNode",
                                "name": "non_null_expression",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      19,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "\"text-4xl font-bold\">\n        Welcome to your tRPC with Prisma starter",
                                    "label": 0,
                                    "name": "binary_expression",
                                    "childrenLabels": [
                                      "leftNode",
                                      1,
                                      "rightNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "\"text-4xl font-bold\"",
                                        "label": "leftNode",
                                        "name": "string",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "text-4xl font-bold",
                                            "label": 0,
                                            "name": "string_fragment"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "Welcome to your tRPC with Prisma",
                                        "label": 1,
                                        "name": "ERROR",
                                        "childrenLabels": [
                                          0,
                                          1,
                                          2,
                                          3,
                                          4
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "Welcome",
                                            "label": 0,
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              1
                                            ],
                                            "str": "to",
                                            "label": 1,
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              2
                                            ],
                                            "str": "your",
                                            "label": 2,
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              3
                                            ],
                                            "str": "tRPC",
                                            "label": 3,
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              4
                                            ],
                                            "str": "Prisma",
                                            "label": 4,
                                            "name": "identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0,
                                          2
                                        ],
                                        "str": "starter",
                                        "label": "rightNode",
                                        "name": "identifier"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  19,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ],
                                "str": "/h1>\n      <p className=\"text-gray-400\">\n        If you get stuck",
                                "label": "rightNode",
                                "name": "binary_expression",
                                "childrenLabels": [
                                  "leftNode",
                                  1,
                                  "rightNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      19,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "/h1>",
                                    "label": "leftNode",
                                    "name": "regex",
                                    "childrenLabels": [
                                      "patternNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "h1>",
                                        "label": "patternNode",
                                        "name": "regex_pattern"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      19,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ],
                                    "str": "p",
                                    "label": 1,
                                    "name": "ERROR",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          0
                                        ],
                                        "str": "p",
                                        "label": 0,
                                        "name": "identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      19,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      2
                                    ],
                                    "str": "className=\"text-gray-400\">\n        If you get stuck",
                                    "label": "rightNode",
                                    "name": "assignment_expression",
                                    "childrenLabels": [
                                      "leftNode",
                                      "rightNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          2,
                                          0
                                        ],
                                        "str": "className",
                                        "label": "leftNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          19,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          1,
                                          2,
                                          1
                                        ],
                                        "str": "\"text-gray-400\">\n        If you get stuck",
                                        "label": "rightNode",
                                        "name": "binary_expression",
                                        "childrenLabels": [
                                          "leftNode",
                                          1,
                                          "rightNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              2,
                                              1,
                                              0
                                            ],
                                            "str": "\"text-gray-400\"",
                                            "label": "leftNode",
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  19,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  2,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "text-gray-400",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              2,
                                              1,
                                              1
                                            ],
                                            "str": "If you get",
                                            "label": 1,
                                            "name": "ERROR",
                                            "childrenLabels": [
                                              0,
                                              1
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  19,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  2,
                                                  1,
                                                  1,
                                                  0
                                                ],
                                                "str": "If",
                                                "label": 0,
                                                "name": "identifier"
                                              },
                                              {
                                                "nestedIndex": [
                                                  19,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  1,
                                                  2,
                                                  1,
                                                  1,
                                                  1
                                                ],
                                                "str": "you",
                                                "label": 1,
                                                "name": "identifier"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              19,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              1,
                                              2,
                                              1,
                                              2
                                            ],
                                            "str": "stuck",
                                            "label": "rightNode",
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          20
        ],
        "str": "check{' '}\n        <Link className=\"underline\" href=\"https://trpc.io\">\n          the docs\n        </Link>\n        , write a",
        "label": 20,
        "name": "ERROR",
        "childrenLabels": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "children": [
          {
            "nestedIndex": [
              20,
              0
            ],
            "str": "check",
            "label": 0,
            "name": "identifier"
          },
          {
            "nestedIndex": [
              20,
              1
            ],
            "str": "' '",
            "label": 1,
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  20,
                  1,
                  0
                ],
                "str": " ",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              20,
              2
            ],
            "str": "}\n        <Link className=\"underline\" href=\"https://trpc.io\">\n          the docs",
            "label": 2,
            "name": "ERROR",
            "childrenLabels": [
              0,
              1,
              2
            ],
            "children": [
              {
                "nestedIndex": [
                  20,
                  2,
                  0
                ],
                "str": "<Link className=\"underline\" href=\"https://trpc.io\">",
                "label": 0,
                "name": "type_parameters",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      20,
                      2,
                      0,
                      0
                    ],
                    "str": "Link",
                    "label": 0,
                    "name": "ERROR",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          20,
                          2,
                          0,
                          0,
                          0
                        ],
                        "str": "Link",
                        "label": 0,
                        "name": "identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      20,
                      2,
                      0,
                      1
                    ],
                    "str": "className=\"underline\" href=\"https://trpc.io\"",
                    "label": 1,
                    "name": "type_parameter",
                    "childrenLabels": [
                      "nameNode",
                      "valueNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          20,
                          2,
                          0,
                          1,
                          0
                        ],
                        "str": "className",
                        "label": "nameNode",
                        "name": "type_identifier"
                      },
                      {
                        "nestedIndex": [
                          20,
                          2,
                          0,
                          1,
                          1
                        ],
                        "str": "=\"underline\" href=\"https://trpc.io\"",
                        "label": "valueNode",
                        "name": "default_type",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              20,
                              2,
                              0,
                              1,
                              1,
                              0
                            ],
                            "str": "\"underline\" href=",
                            "label": 0,
                            "name": "ERROR",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  20,
                                  2,
                                  0,
                                  1,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "\"underline\"",
                                "label": 0,
                                "name": "literal_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      20,
                                      2,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "\"underline\"",
                                    "label": 0,
                                    "name": "string",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          20,
                                          2,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "underline",
                                        "label": 0,
                                        "name": "string_fragment"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  20,
                                  2,
                                  0,
                                  1,
                                  1,
                                  0,
                                  1
                                ],
                                "str": "href",
                                "label": 1,
                                "name": "identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              20,
                              2,
                              0,
                              1,
                              1,
                              1
                            ],
                            "str": "\"https://trpc.io\"",
                            "label": 1,
                            "name": "literal_type",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  20,
                                  2,
                                  0,
                                  1,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"https://trpc.io\"",
                                "label": 0,
                                "name": "string",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      20,
                                      2,
                                      0,
                                      1,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "https://trpc.io",
                                    "label": 0,
                                    "name": "string_fragment"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  20,
                  2,
                  1
                ],
                "str": "the",
                "label": 1,
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  20,
                  2,
                  2
                ],
                "str": "docs",
                "label": 2,
                "name": "identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              20,
              3
            ],
            "str": "Link>",
            "label": 3,
            "name": "regex_pattern"
          },
          {
            "nestedIndex": [
              20,
              4
            ],
            "str": "write",
            "label": 4,
            "name": "identifier"
          },
          {
            "nestedIndex": [
              20,
              5
            ],
            "str": "a",
            "label": 5,
            "name": "identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          21
        ],
        "str": "message in our{' '}\n        <Link className=\"underline\" href=\"https://trpc.io/discord\">\n          Discord-channel\n        </Link>",
        "label": 21,
        "name": "binary_expression",
        "childrenLabels": [
          "leftNode",
          1,
          "rightNode"
        ],
        "children": [
          {
            "nestedIndex": [
              21,
              0
            ],
            "str": "message",
            "label": "leftNode",
            "name": "identifier"
          },
          {
            "nestedIndex": [
              21,
              1
            ],
            "str": "our{' '}\n        <Link className=\"underline\" href=\"https://trpc.io/discord\">\n          Discord",
            "label": 1,
            "name": "ERROR",
            "childrenLabels": [
              0,
              1,
              2,
              3,
              4
            ],
            "children": [
              {
                "nestedIndex": [
                  21,
                  1,
                  0
                ],
                "str": "our",
                "label": 0,
                "name": "identifier"
              },
              {
                "nestedIndex": [
                  21,
                  1,
                  1
                ],
                "str": "' '",
                "label": 1,
                "name": "string",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      21,
                      1,
                      1,
                      0
                    ],
                    "str": " ",
                    "label": 0,
                    "name": "string_fragment"
                  }
                ]
              },
              {
                "nestedIndex": [
                  21,
                  1,
                  2
                ],
                "str": "}",
                "label": 2,
                "name": "ERROR"
              },
              {
                "nestedIndex": [
                  21,
                  1,
                  3
                ],
                "str": "<Link className=\"underline\" href=\"https://trpc.io/discord\">",
                "label": 3,
                "name": "type_parameters",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      21,
                      1,
                      3,
                      0
                    ],
                    "str": "Link",
                    "label": 0,
                    "name": "ERROR",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          21,
                          1,
                          3,
                          0,
                          0
                        ],
                        "str": "Link",
                        "label": 0,
                        "name": "identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      21,
                      1,
                      3,
                      1
                    ],
                    "str": "className=\"underline\" href=\"https://trpc.io/discord\"",
                    "label": 1,
                    "name": "type_parameter",
                    "childrenLabels": [
                      "nameNode",
                      "valueNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          21,
                          1,
                          3,
                          1,
                          0
                        ],
                        "str": "className",
                        "label": "nameNode",
                        "name": "type_identifier"
                      },
                      {
                        "nestedIndex": [
                          21,
                          1,
                          3,
                          1,
                          1
                        ],
                        "str": "=\"underline\" href=\"https://trpc.io/discord\"",
                        "label": "valueNode",
                        "name": "default_type",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              21,
                              1,
                              3,
                              1,
                              1,
                              0
                            ],
                            "str": "\"underline\" href=",
                            "label": 0,
                            "name": "ERROR",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  21,
                                  1,
                                  3,
                                  1,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "\"underline\"",
                                "label": 0,
                                "name": "literal_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      21,
                                      1,
                                      3,
                                      1,
                                      1,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "\"underline\"",
                                    "label": 0,
                                    "name": "string",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          21,
                                          1,
                                          3,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "underline",
                                        "label": 0,
                                        "name": "string_fragment"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  21,
                                  1,
                                  3,
                                  1,
                                  1,
                                  0,
                                  1
                                ],
                                "str": "href",
                                "label": 1,
                                "name": "identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              21,
                              1,
                              3,
                              1,
                              1,
                              1
                            ],
                            "str": "\"https://trpc.io/discord\"",
                            "label": 1,
                            "name": "literal_type",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  21,
                                  1,
                                  3,
                                  1,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"https://trpc.io/discord\"",
                                "label": 0,
                                "name": "string",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      21,
                                      1,
                                      3,
                                      1,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "https://trpc.io/discord",
                                    "label": 0,
                                    "name": "string_fragment"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  21,
                  1,
                  4
                ],
                "str": "Discord",
                "label": 4,
                "name": "identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              21,
              2
            ],
            "str": "-channel\n        </Link>",
            "label": "rightNode",
            "name": "binary_expression",
            "childrenLabels": [
              "leftNode",
              "rightNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  21,
                  2,
                  0
                ],
                "str": "-channel",
                "label": "leftNode",
                "name": "unary_expression",
                "childrenLabels": [
                  "argumentNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      21,
                      2,
                      0,
                      0
                    ],
                    "str": "channel",
                    "label": "argumentNode",
                    "name": "identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  21,
                  2,
                  1
                ],
                "str": "/Link>",
                "label": "rightNode",
                "name": "regex",
                "childrenLabels": [
                  "patternNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      21,
                      2,
                      1,
                      0
                    ],
                    "str": "Link>",
                    "label": "patternNode",
                    "name": "regex_pattern"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          22
        ],
        "str": "or write a",
        "label": 22,
        "name": "ERROR",
        "childrenLabels": [
          0,
          1,
          2
        ],
        "children": [
          {
            "nestedIndex": [
              22,
              0
            ],
            "str": "or",
            "label": 0,
            "name": "identifier"
          },
          {
            "nestedIndex": [
              22,
              1
            ],
            "str": "write",
            "label": 1,
            "name": "identifier"
          },
          {
            "nestedIndex": [
              22,
              2
            ],
            "str": "a",
            "label": 2,
            "name": "identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          23
        ],
        "str": "message",
        "label": 23,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          24
        ],
        "str": "{' '}\n        <Link\n          className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"\n        >\n          GitHub Discussions\n        </Link>\n        .\n      </p>\n\n      <div className=\"flex flex-col py-8 items-start gap-y-2\">\n        <div className=\"flex flex-col\"></div>\n        <h2 className=\"text-3xl font-semibold\">\n          Latest Posts\n          {postsQuery.status === 'loading' && '(loading)'}\n        </h2>\n\n        <button\n          className=\"bg-gray-900 p-2 rounded-md font-semibold disabled:bg-gray-700 disabled:text-gray-400\"\n          onClick={() => postsQuery.fetchPreviousPage()}\n          disabled={\n            !postsQuery.hasPreviousPage || postsQuery.isFetchingPreviousPage\n          }\n        >\n          {postsQuery.isFetchingPreviousPage\n            ? 'Loading more...'\n            : postsQuery.hasPreviousPage\n            ? 'Load More'\n            : 'Nothing more to load'}",
        "label": 24,
        "name": "object",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              24,
              0
            ],
            "str": "' '}\n        <Link\n          className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"\n        >\n          GitHub Discussions\n        </Link>\n        .\n      </p>\n\n      <div className=\"flex flex-col py-8 items-start gap-y-2\">\n        <div className=\"flex flex-col\"></div>\n        <h2 className=\"text-3xl font-semibold\">\n          Latest Posts\n          {postsQuery.status === 'loading' && '(loading)",
            "label": 0,
            "name": "ERROR",
            "childrenLabels": [
              0,
              1,
              2,
              3,
              4
            ],
            "children": [
              {
                "nestedIndex": [
                  24,
                  0,
                  0
                ],
                "str": "' '",
                "label": 0,
                "name": "string",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      0,
                      0,
                      0
                    ],
                    "str": " ",
                    "label": 0,
                    "name": "string_fragment"
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  0,
                  1
                ],
                "str": "}\n        <Link\n          className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"\n        >\n          GitHub Discussions\n        </Link>\n        .\n      </p>\n\n      <div className=\"flex flex-col py-8 items-start gap-y-2\">\n        <div className=\"flex flex-col\"></div>",
                "label": 1,
                "name": "ERROR",
                "childrenLabels": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      0
                    ],
                    "str": "<Link\n          className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"\n        >",
                    "label": 0,
                    "name": "type_parameters",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "Link",
                        "label": 0,
                        "name": "ERROR",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "Link",
                            "label": 0,
                            "name": "identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "className=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"",
                        "label": 1,
                        "name": "type_parameter",
                        "childrenLabels": [
                          "nameNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              0,
                              1,
                              0
                            ],
                            "str": "className",
                            "label": "nameNode",
                            "name": "type_identifier"
                          },
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              0,
                              1,
                              1
                            ],
                            "str": "=\"underline\"\n          href=\"https://github.com/trpc/trpc/discussions\"",
                            "label": "valueNode",
                            "name": "default_type",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  24,
                                  0,
                                  1,
                                  0,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"underline\"\n          href=",
                                "label": 0,
                                "name": "ERROR",
                                "childrenLabels": [
                                  0,
                                  1
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      1,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "\"underline\"",
                                    "label": 0,
                                    "name": "literal_type",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          24,
                                          0,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "\"underline\"",
                                        "label": 0,
                                        "name": "string",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              24,
                                              0,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "underline",
                                            "label": 0,
                                            "name": "string_fragment"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      1,
                                      0,
                                      1,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "href",
                                    "label": 1,
                                    "name": "identifier"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  24,
                                  0,
                                  1,
                                  0,
                                  1,
                                  1,
                                  1
                                ],
                                "str": "\"https://github.com/trpc/trpc/discussions\"",
                                "label": 1,
                                "name": "literal_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      1,
                                      0,
                                      1,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "\"https://github.com/trpc/trpc/discussions\"",
                                    "label": 0,
                                    "name": "string",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          24,
                                          0,
                                          1,
                                          0,
                                          1,
                                          1,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "https://github.com/trpc/trpc/discussions",
                                        "label": 0,
                                        "name": "string_fragment"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      1
                    ],
                    "str": "GitHub",
                    "label": 1,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      2
                    ],
                    "str": "Discussions",
                    "label": 2,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      3
                    ],
                    "str": "</Link>",
                    "label": 3,
                    "name": "type_parameters",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          3,
                          0
                        ],
                        "str": "/",
                        "label": 0,
                        "name": "ERROR"
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          3,
                          1
                        ],
                        "str": "Link",
                        "label": 1,
                        "name": "type_parameter",
                        "childrenLabels": [
                          "nameNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              3,
                              1,
                              0
                            ],
                            "str": "Link",
                            "label": "nameNode",
                            "name": "type_identifier"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      4
                    ],
                    "str": "</p>",
                    "label": 4,
                    "name": "type_parameters",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          4,
                          0
                        ],
                        "str": "/",
                        "label": 0,
                        "name": "ERROR"
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          4,
                          1
                        ],
                        "str": "p",
                        "label": 1,
                        "name": "type_parameter",
                        "childrenLabels": [
                          "nameNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              4,
                              1,
                              0
                            ],
                            "str": "p",
                            "label": "nameNode",
                            "name": "type_identifier"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      5
                    ],
                    "str": "<div className=\"flex flex-col py-8 items-start gap-y-2\">",
                    "label": 5,
                    "name": "type_parameters",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          5,
                          0
                        ],
                        "str": "div",
                        "label": 0,
                        "name": "ERROR",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              5,
                              0,
                              0
                            ],
                            "str": "div",
                            "label": 0,
                            "name": "identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          5,
                          1
                        ],
                        "str": "className=\"flex flex-col py-8 items-start gap-y-2\"",
                        "label": 1,
                        "name": "type_parameter",
                        "childrenLabels": [
                          "nameNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              5,
                              1,
                              0
                            ],
                            "str": "className",
                            "label": "nameNode",
                            "name": "type_identifier"
                          },
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              5,
                              1,
                              1
                            ],
                            "str": "=\"flex flex-col py-8 items-start gap-y-2\"",
                            "label": "valueNode",
                            "name": "default_type",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  24,
                                  0,
                                  1,
                                  5,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"flex flex-col py-8 items-start gap-y-2\"",
                                "label": 0,
                                "name": "literal_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      1,
                                      5,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "\"flex flex-col py-8 items-start gap-y-2\"",
                                    "label": 0,
                                    "name": "string",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          24,
                                          0,
                                          1,
                                          5,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "flex flex-col py-8 items-start gap-y-2",
                                        "label": 0,
                                        "name": "string_fragment"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      6
                    ],
                    "str": "<div className=\"flex flex-col\">",
                    "label": 6,
                    "name": "type_parameters",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          6,
                          0
                        ],
                        "str": "div",
                        "label": 0,
                        "name": "ERROR",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              6,
                              0,
                              0
                            ],
                            "str": "div",
                            "label": 0,
                            "name": "identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          1,
                          6,
                          1
                        ],
                        "str": "className=\"flex flex-col\"",
                        "label": 1,
                        "name": "type_parameter",
                        "childrenLabels": [
                          "nameNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              6,
                              1,
                              0
                            ],
                            "str": "className",
                            "label": "nameNode",
                            "name": "type_identifier"
                          },
                          {
                            "nestedIndex": [
                              24,
                              0,
                              1,
                              6,
                              1,
                              1
                            ],
                            "str": "=\"flex flex-col\"",
                            "label": "valueNode",
                            "name": "default_type",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  24,
                                  0,
                                  1,
                                  6,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "\"flex flex-col\"",
                                "label": 0,
                                "name": "literal_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      1,
                                      6,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "\"flex flex-col\"",
                                    "label": 0,
                                    "name": "string",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          24,
                                          0,
                                          1,
                                          6,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "flex flex-col",
                                        "label": 0,
                                        "name": "string_fragment"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      1,
                      7
                    ],
                    "str": "div",
                    "label": 7,
                    "name": "identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  0,
                  2
                ],
                "str": "<h2 className=\"text-3xl font-semibold\">",
                "label": 2,
                "name": "type_parameters",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      0,
                      2,
                      0
                    ],
                    "str": "h2",
                    "label": 0,
                    "name": "ERROR",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          2,
                          0,
                          0
                        ],
                        "str": "h2",
                        "label": 0,
                        "name": "identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      2,
                      1
                    ],
                    "str": "className=\"text-3xl font-semibold\"",
                    "label": 1,
                    "name": "type_parameter",
                    "childrenLabels": [
                      "nameNode",
                      "valueNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          2,
                          1,
                          0
                        ],
                        "str": "className",
                        "label": "nameNode",
                        "name": "type_identifier"
                      },
                      {
                        "nestedIndex": [
                          24,
                          0,
                          2,
                          1,
                          1
                        ],
                        "str": "=\"text-3xl font-semibold\"",
                        "label": "valueNode",
                        "name": "default_type",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              24,
                              0,
                              2,
                              1,
                              1,
                              0
                            ],
                            "str": "\"text-3xl font-semibold\"",
                            "label": 0,
                            "name": "literal_type",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  24,
                                  0,
                                  2,
                                  1,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "\"text-3xl font-semibold\"",
                                "label": 0,
                                "name": "string",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      24,
                                      0,
                                      2,
                                      1,
                                      1,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "text-3xl font-semibold",
                                    "label": 0,
                                    "name": "string_fragment"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  0,
                  3
                ],
                "str": "Latest Posts\n          {postsQuery.status === 'loading' && '",
                "label": 3,
                "name": "ERROR",
                "childrenLabels": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      0,
                      3,
                      0
                    ],
                    "str": "Latest",
                    "label": 0,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      3,
                      1
                    ],
                    "str": "Posts",
                    "label": 1,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      3,
                      2
                    ],
                    "str": "postsQuery",
                    "label": 2,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      3,
                      3
                    ],
                    "str": "status",
                    "label": 3,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      0,
                      3,
                      4
                    ],
                    "str": "loading",
                    "label": 4,
                    "name": "identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  0,
                  4
                ],
                "str": "(loading)",
                "label": 4,
                "name": "formal_parameters",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      0,
                      4,
                      0
                    ],
                    "str": "loading",
                    "label": 0,
                    "name": "required_parameter",
                    "childrenLabels": [
                      "patternNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          0,
                          4,
                          0,
                          0
                        ],
                        "str": "loading",
                        "label": "patternNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              24,
              1
            ],
            "str": "'}\n        </h2>\n\n        <button\n          className=\"bg-gray-900 p-2 rounded-md font-semibold disabled:bg-gray-700 disabled:text-gray-400\"\n          onClick={() => postsQuery.fetchPreviousPage()}\n          disabled={\n            !postsQuery.hasPreviousPage || postsQuery.isFetchingPreviousPage\n          }\n        >\n          {postsQuery.isFetchingPreviousPage\n            ? 'Loading more...'\n            : postsQuery.hasPreviousPage\n            ? 'Load More'\n            : 'Nothing more to load'",
            "label": 1,
            "name": "pair",
            "childrenLabels": [
              "keyNode",
              1,
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  24,
                  1,
                  0
                ],
                "str": "'}\n        </h2>\n\n        <button\n          className=\"bg-gray-900 p-2 rounded-md font-semibold disabled:bg-gray-700 disabled:text-gray-400\"\n          onClick={() => postsQuery.fetchPreviousPage()}\n          disabled={\n            !postsQuery.hasPreviousPage || postsQuery.isFetchingPreviousPage\n          }\n        >\n          {postsQuery.isFetchingPreviousPage\n            ? '",
                "label": "keyNode",
                "name": "string",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      1,
                      0,
                      0
                    ],
                    "str": "}\n        </h2>\n\n        <button\n          className=\"bg-gray-900 p-2 rounded-md font-semibold disabled:bg-gray-700 disabled:text-gray-400\"\n          onClick={() => postsQuery.fetchPreviousPage()}\n          disabled={\n            !postsQuery.hasPreviousPage || postsQuery.isFetchingPreviousPage\n          }\n        >\n          {postsQuery.isFetchingPreviousPage\n            ? ",
                    "label": 0,
                    "name": "string_fragment"
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  1,
                  1
                ],
                "str": "Loading more...'",
                "label": 1,
                "name": "ERROR",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      1,
                      1,
                      0
                    ],
                    "str": "Loading",
                    "label": 0,
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      24,
                      1,
                      1,
                      1
                    ],
                    "str": "more",
                    "label": 1,
                    "name": "identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  24,
                  1,
                  2
                ],
                "str": "postsQuery.hasPreviousPage\n            ? 'Load More'\n            : 'Nothing more to load'",
                "label": "valueNode",
                "name": "ternary_expression",
                "childrenLabels": [
                  "conditionNode",
                  "consequenceNode",
                  "alternativeNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      24,
                      1,
                      2,
                      0
                    ],
                    "str": "postsQuery.hasPreviousPage",
                    "label": "conditionNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          1,
                          2,
                          0,
                          0
                        ],
                        "str": "postsQuery",
                        "label": "objectNode",
                        "name": "identifier"
                      },
                      {
                        "nestedIndex": [
                          24,
                          1,
                          2,
                          0,
                          1
                        ],
                        "str": "hasPreviousPage",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      1,
                      2,
                      1
                    ],
                    "str": "'Load More'",
                    "label": "consequenceNode",
                    "name": "string",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          1,
                          2,
                          1,
                          0
                        ],
                        "str": "Load More",
                        "label": 0,
                        "name": "string_fragment"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      24,
                      1,
                      2,
                      2
                    ],
                    "str": "'Nothing more to load'",
                    "label": "alternativeNode",
                    "name": "string",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          24,
                          1,
                          2,
                          2,
                          0
                        ],
                        "str": "Nothing more to load",
                        "label": 0,
                        "name": "string_fragment"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          25
        ],
        "str": "/button>\n\n        {",
        "label": 25,
        "name": "ERROR",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              25,
              0
            ],
            "str": "button>",
            "label": 0,
            "name": "regex_pattern"
          }
        ]
      },
      {
        "nestedIndex": [
          26
        ],
        "str": "postsQuery.data?.pages.map",
        "label": 26,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              26,
              0
            ],
            "str": "postsQuery.data?.pages",
            "label": "objectNode",
            "name": "member_expression",
            "childrenLabels": [
              "objectNode",
              "optionalChainNode",
              "propertyNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  26,
                  0,
                  0
                ],
                "str": "postsQuery.data",
                "label": "objectNode",
                "name": "member_expression",
                "childrenLabels": [
                  "objectNode",
                  "propertyNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      26,
                      0,
                      0,
                      0
                    ],
                    "str": "postsQuery",
                    "label": "objectNode",
                    "name": "identifier"
                  },
                  {
                    "nestedIndex": [
                      26,
                      0,
                      0,
                      1
                    ],
                    "str": "data",
                    "label": "propertyNode",
                    "name": "property_identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  26,
                  0,
                  1
                ],
                "str": "?.",
                "label": "optionalChainNode",
                "name": "optional_chain"
              },
              {
                "nestedIndex": [
                  26,
                  0,
                  2
                ],
                "str": "pages",
                "label": "propertyNode",
                "name": "property_identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              26,
              1
            ],
            "str": "map",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          27
        ],
        "str": "(page, index) => (\n          <Fragment key={page.items[0]?.id || index}>\n            {page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))}\n          </Fragment>\n        ))}\n      </div>\n\n      <hr",
        "label": 27,
        "name": "binary_expression",
        "childrenLabels": [
          "leftNode",
          1,
          "rightNode"
        ],
        "children": [
          {
            "nestedIndex": [
              27,
              0
            ],
            "str": "(page, index) => (\n          <Fragment key={page.items[0]?.id || index}>\n            {page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))}\n          </Fragment>\n        ))",
            "label": "leftNode",
            "name": "arrow_function",
            "childrenLabels": [
              "parametersNode",
              "bodyNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  27,
                  0,
                  0
                ],
                "str": "(page, index)",
                "label": "parametersNode",
                "name": "formal_parameters",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      27,
                      0,
                      0,
                      0
                    ],
                    "str": "page",
                    "label": 0,
                    "name": "required_parameter",
                    "childrenLabels": [
                      "patternNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          27,
                          0,
                          0,
                          0,
                          0
                        ],
                        "str": "page",
                        "label": "patternNode",
                        "name": "identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      27,
                      0,
                      0,
                      1
                    ],
                    "str": "index",
                    "label": 1,
                    "name": "required_parameter",
                    "childrenLabels": [
                      "patternNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          27,
                          0,
                          0,
                          1,
                          0
                        ],
                        "str": "index",
                        "label": "patternNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  27,
                  0,
                  1
                ],
                "str": "(\n          <Fragment key={page.items[0]?.id || index}>\n            {page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))}\n          </Fragment>\n        ))",
                "label": "bodyNode",
                "name": "parenthesized_expression",
                "childrenLabels": [
                  0,
                  1
                ],
                "children": [
                  {
                    "nestedIndex": [
                      27,
                      0,
                      1,
                      0
                    ],
                    "str": "<Fragment key={page.items[0]?.id || index}>\n            {page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))",
                    "label": 0,
                    "name": "type_assertion",
                    "childrenLabels": [
                      0,
                      1
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          27,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "<Fragment key={page.items[0]?.id || index}>",
                        "label": 0,
                        "name": "type_arguments",
                        "childrenLabels": [
                          0,
                          1,
                          2
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              27,
                              0,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "Fragment key={page.items[0]?.",
                            "label": 0,
                            "name": "ERROR",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "Fragment key={page.items[0]",
                                "label": 0,
                                "name": "lookup_type",
                                "childrenLabels": [
                                  0,
                                  1
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "Fragment key={page.items",
                                    "label": 0,
                                    "name": "nested_type_identifier",
                                    "childrenLabels": [
                                      "moduleNode",
                                      1,
                                      "nameNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "Fragment",
                                        "label": "moduleNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "key={page",
                                        "label": 1,
                                        "name": "ERROR",
                                        "childrenLabels": [
                                          0,
                                          1
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "key",
                                            "label": 0,
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              1
                                            ],
                                            "str": "page",
                                            "label": 1,
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          2
                                        ],
                                        "str": "items",
                                        "label": "nameNode",
                                        "name": "type_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      1
                                    ],
                                    "str": "0",
                                    "label": 1,
                                    "name": "literal_type",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1,
                                          0
                                        ],
                                        "str": "0",
                                        "label": 0,
                                        "name": "number"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              27,
                              0,
                              1,
                              0,
                              0,
                              1
                            ],
                            "str": "id || index",
                            "label": 1,
                            "name": "union_type",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "id",
                                "label": 0,
                                "name": "type_identifier"
                              },
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  0,
                                  1,
                                  1
                                ],
                                "str": "| index",
                                "label": 1,
                                "name": "union_type",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      0,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "index",
                                    "label": 0,
                                    "name": "type_identifier"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              27,
                              0,
                              1,
                              0,
                              0,
                              2
                            ],
                            "str": "}",
                            "label": 2,
                            "name": "ERROR"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          27,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "{page.items.map((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))",
                        "label": 1,
                        "name": "call_expression",
                        "childrenLabels": [
                          "functionNode",
                          "argumentsNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              27,
                              0,
                              1,
                              0,
                              1,
                              0
                            ],
                            "str": "{page.items.map",
                            "label": "functionNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  1,
                                  0,
                                  0
                                ],
                                "str": "{page.items",
                                "label": "objectNode",
                                "name": "member_expression",
                                "childrenLabels": [
                                  "objectNode",
                                  "propertyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      1,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "{page",
                                    "label": "objectNode",
                                    "name": "object",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "page",
                                        "label": 0,
                                        "name": "shorthand_property_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      1,
                                      0,
                                      0,
                                      1
                                    ],
                                    "str": "items",
                                    "label": "propertyNode",
                                    "name": "property_identifier"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  1,
                                  0,
                                  1
                                ],
                                "str": "map",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              27,
                              0,
                              1,
                              0,
                              1,
                              1
                            ],
                            "str": "((item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            ))",
                            "label": "argumentsNode",
                            "name": "arguments",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  27,
                                  0,
                                  1,
                                  0,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "(item) => (\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            )",
                                "label": 0,
                                "name": "arrow_function",
                                "childrenLabels": [
                                  "parametersNode",
                                  "bodyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "(item)",
                                    "label": "parametersNode",
                                    "name": "formal_parameters",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "item",
                                        "label": 0,
                                        "name": "required_parameter",
                                        "childrenLabels": [
                                          "patternNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "item",
                                            "label": "patternNode",
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      27,
                                      0,
                                      1,
                                      0,
                                      1,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "(\n              <article key={item.id}>\n                <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>\n            )",
                                    "label": "bodyNode",
                                    "name": "parenthesized_expression",
                                    "childrenLabels": [
                                      0,
                                      1
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1,
                                          0
                                        ],
                                        "str": "<article key={item.id}>",
                                        "label": 0,
                                        "name": "ERROR",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "<article key={item.id}>",
                                            "label": 0,
                                            "name": "type_parameters",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  27,
                                                  0,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  0,
                                                  0,
                                                  0
                                                ],
                                                "str": "article key={item.id}",
                                                "label": 0,
                                                "name": "type_parameter",
                                                "childrenLabels": [
                                                  "nameNode",
                                                  1,
                                                  "valueNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      0,
                                                      0,
                                                      0,
                                                      0
                                                    ],
                                                    "str": "article",
                                                    "label": "nameNode",
                                                    "name": "type_identifier"
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      0,
                                                      0,
                                                      0,
                                                      1
                                                    ],
                                                    "str": "key",
                                                    "label": 1,
                                                    "name": "ERROR",
                                                    "childrenLabels": [
                                                      0
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          0,
                                                          0,
                                                          0,
                                                          1,
                                                          0
                                                        ],
                                                        "str": "key",
                                                        "label": 0,
                                                        "name": "identifier"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      0,
                                                      0,
                                                      0,
                                                      2
                                                    ],
                                                    "str": "={item.id}",
                                                    "label": "valueNode",
                                                    "name": "default_type",
                                                    "childrenLabels": [
                                                      0
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          0,
                                                          0,
                                                          0,
                                                          2,
                                                          0
                                                        ],
                                                        "str": "{item.id}",
                                                        "label": 0,
                                                        "name": "object_type",
                                                        "childrenLabels": [
                                                          0,
                                                          1
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              27,
                                                              0,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              1,
                                                              0,
                                                              0,
                                                              0,
                                                              2,
                                                              0,
                                                              0
                                                            ],
                                                            "str": "item.",
                                                            "label": 0,
                                                            "name": "ERROR",
                                                            "childrenLabels": [
                                                              0
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  27,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  0,
                                                                  2,
                                                                  0,
                                                                  0,
                                                                  0
                                                                ],
                                                                "str": "item",
                                                                "label": 0,
                                                                "name": "property_identifier"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              27,
                                                              0,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              1,
                                                              0,
                                                              0,
                                                              0,
                                                              2,
                                                              0,
                                                              1
                                                            ],
                                                            "str": "id",
                                                            "label": 1,
                                                            "name": "property_signature",
                                                            "childrenLabels": [
                                                              "nameNode"
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  27,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  0,
                                                                  2,
                                                                  0,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "id",
                                                                "label": "nameNode",
                                                                "name": "property_identifier"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          27,
                                          0,
                                          1,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1,
                                          1
                                        ],
                                        "str": "<h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article>",
                                        "label": 1,
                                        "name": "binary_expression",
                                        "childrenLabels": [
                                          "leftNode",
                                          "rightNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0
                                            ],
                                            "str": "<h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`}>\n                  View more\n                </Link>\n              </article",
                                            "label": "leftNode",
                                            "name": "binary_expression",
                                            "childrenLabels": [
                                              "leftNode",
                                              1,
                                              2,
                                              "rightNode"
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  27,
                                                  0,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "<h3 className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`",
                                                "label": "leftNode",
                                                "name": "type_assertion",
                                                "childrenLabels": [
                                                  0,
                                                  1
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      0,
                                                      0
                                                    ],
                                                    "str": "<h3",
                                                    "label": 0,
                                                    "name": "type_arguments",
                                                    "childrenLabels": [
                                                      0
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          0,
                                                          0,
                                                          0
                                                        ],
                                                        "str": "h3",
                                                        "label": 0,
                                                        "name": "type_identifier"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      0,
                                                      1
                                                    ],
                                                    "str": "className=\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`",
                                                    "label": 1,
                                                    "name": "assignment_expression",
                                                    "childrenLabels": [
                                                      "leftNode",
                                                      "rightNode"
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          0,
                                                          1,
                                                          0
                                                        ],
                                                        "str": "className",
                                                        "label": "leftNode",
                                                        "name": "identifier"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          0,
                                                          1,
                                                          1
                                                        ],
                                                        "str": "\"text-2xl font-semibold\">{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`",
                                                        "label": "rightNode",
                                                        "name": "binary_expression",
                                                        "childrenLabels": [
                                                          "leftNode",
                                                          "rightNode"
                                                        ],
                                                        "children": [
                                                          {
                                                            "nestedIndex": [
                                                              27,
                                                              0,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              1,
                                                              1,
                                                              0
                                                            ],
                                                            "str": "\"text-2xl font-semibold\"",
                                                            "label": "leftNode",
                                                            "name": "string",
                                                            "childrenLabels": [
                                                              0
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  27,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0
                                                                ],
                                                                "str": "text-2xl font-semibold",
                                                                "label": 0,
                                                                "name": "string_fragment"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nestedIndex": [
                                                              27,
                                                              0,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              1,
                                                              1,
                                                              0,
                                                              0,
                                                              1,
                                                              1,
                                                              1
                                                            ],
                                                            "str": "{item.title}</h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`",
                                                            "label": "rightNode",
                                                            "name": "binary_expression",
                                                            "childrenLabels": [
                                                              "leftNode",
                                                              "rightNode"
                                                            ],
                                                            "children": [
                                                              {
                                                                "nestedIndex": [
                                                                  27,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  1,
                                                                  0
                                                                ],
                                                                "str": "{item.title}",
                                                                "label": "leftNode",
                                                                "name": "object",
                                                                "childrenLabels": [
                                                                  0,
                                                                  1
                                                                ],
                                                                "children": [
                                                                  {
                                                                    "nestedIndex": [
                                                                      27,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0
                                                                    ],
                                                                    "str": "item.",
                                                                    "label": 0,
                                                                    "name": "ERROR",
                                                                    "childrenLabels": [
                                                                      0
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          27,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          0
                                                                        ],
                                                                        "str": "item",
                                                                        "label": 0,
                                                                        "name": "identifier"
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      27,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1
                                                                    ],
                                                                    "str": "title",
                                                                    "label": 1,
                                                                    "name": "shorthand_property_identifier"
                                                                  }
                                                                ]
                                                              },
                                                              {
                                                                "nestedIndex": [
                                                                  27,
                                                                  0,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  0,
                                                                  0,
                                                                  1,
                                                                  1,
                                                                  1,
                                                                  1
                                                                ],
                                                                "str": "/h3>\n                <Link className=\"text-gray-400\" href={`/post/${item.id}`",
                                                                "label": "rightNode",
                                                                "name": "binary_expression",
                                                                "childrenLabels": [
                                                                  "leftNode",
                                                                  1,
                                                                  "rightNode"
                                                                ],
                                                                "children": [
                                                                  {
                                                                    "nestedIndex": [
                                                                      27,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      0
                                                                    ],
                                                                    "str": "/h3>",
                                                                    "label": "leftNode",
                                                                    "name": "regex",
                                                                    "childrenLabels": [
                                                                      "patternNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          27,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0
                                                                        ],
                                                                        "str": "h3>",
                                                                        "label": "patternNode",
                                                                        "name": "regex_pattern"
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      27,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      1
                                                                    ],
                                                                    "str": "Link",
                                                                    "label": 1,
                                                                    "name": "ERROR",
                                                                    "childrenLabels": [
                                                                      0
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          27,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          0
                                                                        ],
                                                                        "str": "Link",
                                                                        "label": 0,
                                                                        "name": "identifier"
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "nestedIndex": [
                                                                      27,
                                                                      0,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      0,
                                                                      0,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      1,
                                                                      2
                                                                    ],
                                                                    "str": "className=\"text-gray-400\" href={`/post/${item.id}`",
                                                                    "label": "rightNode",
                                                                    "name": "assignment_expression",
                                                                    "childrenLabels": [
                                                                      "leftNode",
                                                                      "rightNode"
                                                                    ],
                                                                    "children": [
                                                                      {
                                                                        "nestedIndex": [
                                                                          27,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          2,
                                                                          0
                                                                        ],
                                                                        "str": "className",
                                                                        "label": "leftNode",
                                                                        "name": "identifier"
                                                                      },
                                                                      {
                                                                        "nestedIndex": [
                                                                          27,
                                                                          0,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          0,
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          1,
                                                                          2,
                                                                          1
                                                                        ],
                                                                        "str": "\"text-gray-400\" href={`/post/${item.id}`",
                                                                        "label": "rightNode",
                                                                        "name": "assignment_expression",
                                                                        "childrenLabels": [
                                                                          "leftNode",
                                                                          1,
                                                                          "rightNode"
                                                                        ],
                                                                        "children": [
                                                                          {
                                                                            "nestedIndex": [
                                                                              27,
                                                                              0,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              0
                                                                            ],
                                                                            "str": "\"text-gray-400\" href",
                                                                            "label": "leftNode",
                                                                            "name": "member_expression",
                                                                            "childrenLabels": [
                                                                              "objectNode",
                                                                              "optionalChainNode",
                                                                              "propertyNode"
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  27,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  0
                                                                                ],
                                                                                "str": "\"text-gray-400\"",
                                                                                "label": "objectNode",
                                                                                "name": "string",
                                                                                "childrenLabels": [
                                                                                  0
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      27,
                                                                                      0,
                                                                                      1,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "text-gray-400",
                                                                                    "label": 0,
                                                                                    "name": "string_fragment"
                                                                                  }
                                                                                ]
                                                                              },
                                                                              {
                                                                                "nestedIndex": [
                                                                                  27,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  1
                                                                                ],
                                                                                "str": "",
                                                                                "label": "optionalChainNode",
                                                                                "name": "optional_chain"
                                                                              },
                                                                              {
                                                                                "nestedIndex": [
                                                                                  27,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  0,
                                                                                  2
                                                                                ],
                                                                                "str": "href",
                                                                                "label": "propertyNode",
                                                                                "name": "property_identifier"
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              27,
                                                                              0,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              1
                                                                            ],
                                                                            "str": "{",
                                                                            "label": 1,
                                                                            "name": "ERROR"
                                                                          },
                                                                          {
                                                                            "nestedIndex": [
                                                                              27,
                                                                              0,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              0,
                                                                              0,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              1,
                                                                              2,
                                                                              1,
                                                                              2
                                                                            ],
                                                                            "str": "`/post/${item.id}`",
                                                                            "label": "rightNode",
                                                                            "name": "template_string",
                                                                            "childrenLabels": [
                                                                              0
                                                                            ],
                                                                            "children": [
                                                                              {
                                                                                "nestedIndex": [
                                                                                  27,
                                                                                  0,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  0,
                                                                                  0,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  1,
                                                                                  2,
                                                                                  1,
                                                                                  2,
                                                                                  0
                                                                                ],
                                                                                "str": "${item.id}",
                                                                                "label": 0,
                                                                                "name": "template_substitution",
                                                                                "childrenLabels": [
                                                                                  0
                                                                                ],
                                                                                "children": [
                                                                                  {
                                                                                    "nestedIndex": [
                                                                                      27,
                                                                                      0,
                                                                                      1,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      0,
                                                                                      0,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      1,
                                                                                      2,
                                                                                      1,
                                                                                      2,
                                                                                      0,
                                                                                      0
                                                                                    ],
                                                                                    "str": "item.id",
                                                                                    "label": 0,
                                                                                    "name": "member_expression",
                                                                                    "childrenLabels": [
                                                                                      "objectNode",
                                                                                      "propertyNode"
                                                                                    ],
                                                                                    "children": [
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          27,
                                                                                          0,
                                                                                          1,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          0
                                                                                        ],
                                                                                        "str": "item",
                                                                                        "label": "objectNode",
                                                                                        "name": "identifier"
                                                                                      },
                                                                                      {
                                                                                        "nestedIndex": [
                                                                                          27,
                                                                                          0,
                                                                                          1,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          0,
                                                                                          0,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          1,
                                                                                          2,
                                                                                          1,
                                                                                          2,
                                                                                          0,
                                                                                          0,
                                                                                          1
                                                                                        ],
                                                                                        "str": "id",
                                                                                        "label": "propertyNode",
                                                                                        "name": "property_identifier"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "nestedIndex": [
                                                  27,
                                                  0,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1
                                                ],
                                                "str": "}",
                                                "label": 1,
                                                "name": "ERROR"
                                              },
                                              {
                                                "nestedIndex": [
                                                  27,
                                                  0,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  2
                                                ],
                                                "str": "View",
                                                "label": 2,
                                                "name": "ERROR",
                                                "childrenLabels": [
                                                  0
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      2,
                                                      0
                                                    ],
                                                    "str": "View",
                                                    "label": 0,
                                                    "name": "identifier"
                                                  }
                                                ]
                                              },
                                              {
                                                "nestedIndex": [
                                                  27,
                                                  0,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  1,
                                                  1,
                                                  0,
                                                  3
                                                ],
                                                "str": "more\n                </Link>\n              </article",
                                                "label": "rightNode",
                                                "name": "binary_expression",
                                                "childrenLabels": [
                                                  "leftNode",
                                                  "rightNode"
                                                ],
                                                "children": [
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      3,
                                                      0
                                                    ],
                                                    "str": "more",
                                                    "label": "leftNode",
                                                    "name": "identifier"
                                                  },
                                                  {
                                                    "nestedIndex": [
                                                      27,
                                                      0,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      1,
                                                      1,
                                                      0,
                                                      3,
                                                      1
                                                    ],
                                                    "str": "/Link>\n              </article",
                                                    "label": "rightNode",
                                                    "name": "regex",
                                                    "childrenLabels": [
                                                      "patternNode",
                                                      1,
                                                      "flagsNode"
                                                    ],
                                                    "children": [
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          0
                                                        ],
                                                        "str": "Link>",
                                                        "label": "patternNode",
                                                        "name": "regex_pattern"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          1
                                                        ],
                                                        "str": "<",
                                                        "label": 1,
                                                        "name": "ERROR"
                                                      },
                                                      {
                                                        "nestedIndex": [
                                                          27,
                                                          0,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          1,
                                                          1,
                                                          0,
                                                          3,
                                                          1,
                                                          2
                                                        ],
                                                        "str": "article",
                                                        "label": "flagsNode",
                                                        "name": "regex_flags"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              27,
                                              0,
                                              1,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              1,
                                              1
                                            ],
                                            "str": "",
                                            "label": "rightNode",
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      27,
                      0,
                      1,
                      1
                    ],
                    "str": "}\n          </Fragment>\n        )",
                    "label": 1,
                    "name": "ERROR",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          27,
                          0,
                          1,
                          1,
                          0
                        ],
                        "str": "Fragment>",
                        "label": 0,
                        "name": "regex_pattern"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "nestedIndex": [
              27,
              1
            ],
            "str": "}",
            "label": 1,
            "name": "ERROR"
          },
          {
            "nestedIndex": [
              27,
              2
            ],
            "str": "/div>\n\n      <hr",
            "label": "rightNode",
            "name": "binary_expression",
            "childrenLabels": [
              "leftNode",
              "rightNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  27,
                  2,
                  0
                ],
                "str": "/div>",
                "label": "leftNode",
                "name": "regex",
                "childrenLabels": [
                  "patternNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      27,
                      2,
                      0,
                      0
                    ],
                    "str": "div>",
                    "label": "patternNode",
                    "name": "regex_pattern"
                  }
                ]
              },
              {
                "nestedIndex": [
                  27,
                  2,
                  1
                ],
                "str": "hr",
                "label": "rightNode",
                "name": "identifier"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          28
        ],
        "str": "/",
        "label": 28,
        "name": "ERROR"
      },
      {
        "nestedIndex": [
          29
        ],
        "str": "<div",
        "label": 29,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              29,
              0
            ],
            "str": "div",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          30
        ],
        "str": "className",
        "label": 30,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          31
        ],
        "str": "\"flex flex-col py-8 items-center\"",
        "label": 31,
        "name": "string",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              31,
              0
            ],
            "str": "flex flex-col py-8 items-center",
            "label": 0,
            "name": "string_fragment"
          }
        ]
      },
      {
        "nestedIndex": [
          32
        ],
        "str": "<h2",
        "label": 32,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              32,
              0
            ],
            "str": "h2",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          33
        ],
        "str": "className",
        "label": 33,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          34
        ],
        "str": "\"text-3xl font-semibold pb-2\"",
        "label": 34,
        "name": "string",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              34,
              0
            ],
            "str": "text-3xl font-semibold pb-2",
            "label": 0,
            "name": "string_fragment"
          }
        ]
      },
      {
        "nestedIndex": [
          35
        ],
        "str": "Add a",
        "label": 35,
        "name": "ERROR",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              35,
              0
            ],
            "str": "Add",
            "label": 0,
            "name": "identifier"
          },
          {
            "nestedIndex": [
              35,
              1
            ],
            "str": "a",
            "label": 1,
            "name": "identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          36
        ],
        "str": "Post",
        "label": 36,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          37
        ],
        "str": "/h2>",
        "label": 37,
        "name": "regex",
        "childrenLabels": [
          "patternNode"
        ],
        "children": [
          {
            "nestedIndex": [
              37,
              0
            ],
            "str": "h2>",
            "label": "patternNode",
            "name": "regex_pattern"
          }
        ]
      },
      {
        "nestedIndex": [
          38
        ],
        "str": "form",
        "label": 38,
        "name": "ERROR",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              38,
              0
            ],
            "str": "form",
            "label": 0,
            "name": "identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          39
        ],
        "str": "className",
        "label": 39,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          40
        ],
        "str": "\"py-2 w-4/6\"\n          onSubmit",
        "label": 40,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              40,
              0
            ],
            "str": "\"py-2 w-4/6\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  40,
                  0,
                  0
                ],
                "str": "py-2 w-4/6",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              40,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              40,
              2
            ],
            "str": "onSubmit",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          41
        ],
        "str": "{async (e) => {\n            /**\n             * In a real app you probably don't want to use this manually\n             * Checkout React Hook Form - it works great with tRPC\n             * @see https://react-hook-form.com/\n             * @see https://kitchen-sink.trpc.io/react-hook-form\n             */\n            e.preventDefault();\n            const $form = e.currentTarget;\n            const values = Object.fromEntries(new FormData($form));\n            type Input = inferProcedureInput<AppRouter['post']['add']>;\n            //    ^?\n            const input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            };\n            try {\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            } catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }\n          }}",
        "label": 41,
        "name": "object",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              41,
              0
            ],
            "str": "async (e) => {\n            /**\n             * In a real app you probably don't want to use this manually\n             * Checkout React Hook Form - it works great with tRPC\n             * @see https://react-hook-form.com/\n             * @see https://kitchen-sink.trpc.io/react-hook-form\n             */\n            e.preventDefault();\n            const $form = e.currentTarget;\n            const values = Object.fromEntries(new FormData($form));\n            type Input = inferProcedureInput<AppRouter['post']['add']>;\n            //    ^?\n            const input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            };\n            try {\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            } catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }\n          }",
            "label": 0,
            "name": "method_definition",
            "childrenLabels": [
              "nameNode",
              "parametersNode",
              2,
              "bodyNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  41,
                  0,
                  0
                ],
                "str": "async",
                "label": "nameNode",
                "name": "property_identifier"
              },
              {
                "nestedIndex": [
                  41,
                  0,
                  1
                ],
                "str": "(e)",
                "label": "parametersNode",
                "name": "formal_parameters",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      41,
                      0,
                      1,
                      0
                    ],
                    "str": "e",
                    "label": 0,
                    "name": "required_parameter",
                    "childrenLabels": [
                      "patternNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "e",
                        "label": "patternNode",
                        "name": "identifier"
                      }
                    ]
                  }
                ]
              },
              {
                "nestedIndex": [
                  41,
                  0,
                  2
                ],
                "str": "=>",
                "label": 2,
                "name": "ERROR"
              },
              {
                "nestedIndex": [
                  41,
                  0,
                  3
                ],
                "str": "{\n            /**\n             * In a real app you probably don't want to use this manually\n             * Checkout React Hook Form - it works great with tRPC\n             * @see https://react-hook-form.com/\n             * @see https://kitchen-sink.trpc.io/react-hook-form\n             */\n            e.preventDefault();\n            const $form = e.currentTarget;\n            const values = Object.fromEntries(new FormData($form));\n            type Input = inferProcedureInput<AppRouter['post']['add']>;\n            //    ^?\n            const input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            };\n            try {\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            } catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }\n          }",
                "label": "bodyNode",
                "name": "statement_block",
                "childrenLabels": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "children": [
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      0
                    ],
                    "str": "/**\n             * In a real app you probably don't want to use this manually\n             * Checkout React Hook Form - it works great with tRPC\n             * @see https://react-hook-form.com/\n             * @see https://kitchen-sink.trpc.io/react-hook-form\n             */",
                    "label": 0,
                    "name": "comment"
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      1
                    ],
                    "str": "e.preventDefault();",
                    "label": 1,
                    "name": "expression_statement",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          1,
                          0
                        ],
                        "str": "e.preventDefault()",
                        "label": 0,
                        "name": "call_expression",
                        "childrenLabels": [
                          "functionNode",
                          "argumentsNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              1,
                              0,
                              0
                            ],
                            "str": "e.preventDefault",
                            "label": "functionNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  1,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "e",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  1,
                                  0,
                                  0,
                                  1
                                ],
                                "str": "preventDefault",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              1,
                              0,
                              1
                            ],
                            "str": "()",
                            "label": "argumentsNode",
                            "name": "arguments"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      2
                    ],
                    "str": "const $form = e.currentTarget;",
                    "label": 2,
                    "name": "lexical_declaration",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          2,
                          0
                        ],
                        "str": "$form = e.currentTarget",
                        "label": 0,
                        "name": "variable_declarator",
                        "childrenLabels": [
                          "nameNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              2,
                              0,
                              0
                            ],
                            "str": "$form",
                            "label": "nameNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              2,
                              0,
                              1
                            ],
                            "str": "e.currentTarget",
                            "label": "valueNode",
                            "name": "member_expression",
                            "childrenLabels": [
                              "objectNode",
                              "propertyNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  2,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "e",
                                "label": "objectNode",
                                "name": "identifier"
                              },
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  2,
                                  0,
                                  1,
                                  1
                                ],
                                "str": "currentTarget",
                                "label": "propertyNode",
                                "name": "property_identifier"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      3
                    ],
                    "str": "const values = Object.fromEntries(new FormData($form));",
                    "label": 3,
                    "name": "lexical_declaration",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          3,
                          0
                        ],
                        "str": "values = Object.fromEntries(new FormData($form))",
                        "label": 0,
                        "name": "variable_declarator",
                        "childrenLabels": [
                          "nameNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              3,
                              0,
                              0
                            ],
                            "str": "values",
                            "label": "nameNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              3,
                              0,
                              1
                            ],
                            "str": "Object.fromEntries(new FormData($form))",
                            "label": "valueNode",
                            "name": "call_expression",
                            "childrenLabels": [
                              "functionNode",
                              "argumentsNode"
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  3,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "Object.fromEntries",
                                "label": "functionNode",
                                "name": "member_expression",
                                "childrenLabels": [
                                  "objectNode",
                                  "propertyNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      3,
                                      0,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "Object",
                                    "label": "objectNode",
                                    "name": "identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      3,
                                      0,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "fromEntries",
                                    "label": "propertyNode",
                                    "name": "property_identifier"
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  3,
                                  0,
                                  1,
                                  1
                                ],
                                "str": "(new FormData($form))",
                                "label": "argumentsNode",
                                "name": "arguments",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      3,
                                      0,
                                      1,
                                      1,
                                      0
                                    ],
                                    "str": "new FormData($form)",
                                    "label": 0,
                                    "name": "new_expression",
                                    "childrenLabels": [
                                      "constructorNode",
                                      "argumentsNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          3,
                                          0,
                                          1,
                                          1,
                                          0,
                                          0
                                        ],
                                        "str": "FormData",
                                        "label": "constructorNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          3,
                                          0,
                                          1,
                                          1,
                                          0,
                                          1
                                        ],
                                        "str": "($form)",
                                        "label": "argumentsNode",
                                        "name": "arguments",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              3,
                                              0,
                                              1,
                                              1,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "$form",
                                            "label": 0,
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      4
                    ],
                    "str": "type Input = inferProcedureInput<AppRouter['post']['add']>;",
                    "label": 4,
                    "name": "type_alias_declaration",
                    "childrenLabels": [
                      "nameNode",
                      "valueNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          4,
                          0
                        ],
                        "str": "Input",
                        "label": "nameNode",
                        "name": "type_identifier"
                      },
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          4,
                          1
                        ],
                        "str": "inferProcedureInput<AppRouter['post']['add']>",
                        "label": "valueNode",
                        "name": "generic_type",
                        "childrenLabels": [
                          "nameNode",
                          "typeArgumentsNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              4,
                              1,
                              0
                            ],
                            "str": "inferProcedureInput",
                            "label": "nameNode",
                            "name": "type_identifier"
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              4,
                              1,
                              1
                            ],
                            "str": "<AppRouter['post']['add']>",
                            "label": "typeArgumentsNode",
                            "name": "type_arguments",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  4,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "AppRouter['post']['add']",
                                "label": 0,
                                "name": "lookup_type",
                                "childrenLabels": [
                                  0,
                                  1
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      4,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "AppRouter['post']",
                                    "label": 0,
                                    "name": "lookup_type",
                                    "childrenLabels": [
                                      0,
                                      1
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          4,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "AppRouter",
                                        "label": 0,
                                        "name": "type_identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          4,
                                          1,
                                          1,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "'post'",
                                        "label": 1,
                                        "name": "literal_type",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              4,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "'post'",
                                            "label": 0,
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  41,
                                                  0,
                                                  3,
                                                  4,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "post",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      4,
                                      1,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "'add'",
                                    "label": 1,
                                    "name": "literal_type",
                                    "childrenLabels": [
                                      0
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          4,
                                          1,
                                          1,
                                          0,
                                          1,
                                          0
                                        ],
                                        "str": "'add'",
                                        "label": 0,
                                        "name": "string",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              4,
                                              1,
                                              1,
                                              0,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "add",
                                            "label": 0,
                                            "name": "string_fragment"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      5
                    ],
                    "str": "//    ^?",
                    "label": 5,
                    "name": "comment"
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      6
                    ],
                    "str": "const input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            };",
                    "label": 6,
                    "name": "lexical_declaration",
                    "childrenLabels": [
                      0
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          6,
                          0
                        ],
                        "str": "input: Input = {\n              title: values.title as string,\n              text: values.text as string,\n            }",
                        "label": 0,
                        "name": "variable_declarator",
                        "childrenLabels": [
                          "nameNode",
                          "typeNode",
                          "valueNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              6,
                              0,
                              0
                            ],
                            "str": "input",
                            "label": "nameNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              6,
                              0,
                              1
                            ],
                            "str": ": Input",
                            "label": "typeNode",
                            "name": "type_annotation",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  6,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "Input",
                                "label": 0,
                                "name": "type_identifier"
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              6,
                              0,
                              2
                            ],
                            "str": "{\n              title: values.title as string,\n              text: values.text as string,\n            }",
                            "label": "valueNode",
                            "name": "object",
                            "childrenLabels": [
                              0,
                              1
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  6,
                                  0,
                                  2,
                                  0
                                ],
                                "str": "title: values.title as string",
                                "label": 0,
                                "name": "pair",
                                "childrenLabels": [
                                  "keyNode",
                                  "valueNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      6,
                                      0,
                                      2,
                                      0,
                                      0
                                    ],
                                    "str": "title",
                                    "label": "keyNode",
                                    "name": "property_identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      6,
                                      0,
                                      2,
                                      0,
                                      1
                                    ],
                                    "str": "values.title as string",
                                    "label": "valueNode",
                                    "name": "as_expression",
                                    "childrenLabels": [
                                      0,
                                      1
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          6,
                                          0,
                                          2,
                                          0,
                                          1,
                                          0
                                        ],
                                        "str": "values.title",
                                        "label": 0,
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              6,
                                              0,
                                              2,
                                              0,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "values",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              6,
                                              0,
                                              2,
                                              0,
                                              1,
                                              0,
                                              1
                                            ],
                                            "str": "title",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          6,
                                          0,
                                          2,
                                          0,
                                          1,
                                          1
                                        ],
                                        "str": "string",
                                        "label": 1,
                                        "name": "predefined_type"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  6,
                                  0,
                                  2,
                                  1
                                ],
                                "str": "text: values.text as string",
                                "label": 1,
                                "name": "pair",
                                "childrenLabels": [
                                  "keyNode",
                                  "valueNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      6,
                                      0,
                                      2,
                                      1,
                                      0
                                    ],
                                    "str": "text",
                                    "label": "keyNode",
                                    "name": "property_identifier"
                                  },
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      6,
                                      0,
                                      2,
                                      1,
                                      1
                                    ],
                                    "str": "values.text as string",
                                    "label": "valueNode",
                                    "name": "as_expression",
                                    "childrenLabels": [
                                      0,
                                      1
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          6,
                                          0,
                                          2,
                                          1,
                                          1,
                                          0
                                        ],
                                        "str": "values.text",
                                        "label": 0,
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              6,
                                              0,
                                              2,
                                              1,
                                              1,
                                              0,
                                              0
                                            ],
                                            "str": "values",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              6,
                                              0,
                                              2,
                                              1,
                                              1,
                                              0,
                                              1
                                            ],
                                            "str": "text",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          6,
                                          0,
                                          2,
                                          1,
                                          1,
                                          1
                                        ],
                                        "str": "string",
                                        "label": 1,
                                        "name": "predefined_type"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      41,
                      0,
                      3,
                      7
                    ],
                    "str": "try {\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            } catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }",
                    "label": 7,
                    "name": "try_statement",
                    "childrenLabels": [
                      "bodyNode",
                      "handlerNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          7,
                          0
                        ],
                        "str": "{\n              await addPost.mutateAsync(input);\n\n              $form.reset();\n            }",
                        "label": "bodyNode",
                        "name": "statement_block",
                        "childrenLabels": [
                          0,
                          1
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              7,
                              0,
                              0
                            ],
                            "str": "await addPost.mutateAsync(input);",
                            "label": 0,
                            "name": "expression_statement",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  7,
                                  0,
                                  0,
                                  0
                                ],
                                "str": "await addPost.mutateAsync(input)",
                                "label": 0,
                                "name": "await_expression",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      7,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "str": "addPost.mutateAsync(input)",
                                    "label": 0,
                                    "name": "call_expression",
                                    "childrenLabels": [
                                      "functionNode",
                                      "argumentsNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "addPost.mutateAsync",
                                        "label": "functionNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "addPost",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "mutateAsync",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "(input)",
                                        "label": "argumentsNode",
                                        "name": "arguments",
                                        "childrenLabels": [
                                          0
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "input",
                                            "label": 0,
                                            "name": "identifier"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              7,
                              0,
                              1
                            ],
                            "str": "$form.reset();",
                            "label": 1,
                            "name": "expression_statement",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  7,
                                  0,
                                  1,
                                  0
                                ],
                                "str": "$form.reset()",
                                "label": 0,
                                "name": "call_expression",
                                "childrenLabels": [
                                  "functionNode",
                                  "argumentsNode"
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      7,
                                      0,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "$form.reset",
                                    "label": "functionNode",
                                    "name": "member_expression",
                                    "childrenLabels": [
                                      "objectNode",
                                      "propertyNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          0,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "$form",
                                        "label": "objectNode",
                                        "name": "identifier"
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          0,
                                          1,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "reset",
                                        "label": "propertyNode",
                                        "name": "property_identifier"
                                      }
                                    ]
                                  },
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      7,
                                      0,
                                      1,
                                      0,
                                      1
                                    ],
                                    "str": "()",
                                    "label": "argumentsNode",
                                    "name": "arguments"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          41,
                          0,
                          3,
                          7,
                          1
                        ],
                        "str": "catch (cause) {\n              console.error({ cause }, 'Failed to add post');\n            }",
                        "label": "handlerNode",
                        "name": "catch_clause",
                        "childrenLabels": [
                          "parameterNode",
                          "bodyNode"
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              7,
                              1,
                              0
                            ],
                            "str": "cause",
                            "label": "parameterNode",
                            "name": "identifier"
                          },
                          {
                            "nestedIndex": [
                              41,
                              0,
                              3,
                              7,
                              1,
                              1
                            ],
                            "str": "{\n              console.error({ cause }, 'Failed to add post');\n            }",
                            "label": "bodyNode",
                            "name": "statement_block",
                            "childrenLabels": [
                              0
                            ],
                            "children": [
                              {
                                "nestedIndex": [
                                  41,
                                  0,
                                  3,
                                  7,
                                  1,
                                  1,
                                  0
                                ],
                                "str": "console.error({ cause }, 'Failed to add post');",
                                "label": 0,
                                "name": "expression_statement",
                                "childrenLabels": [
                                  0
                                ],
                                "children": [
                                  {
                                    "nestedIndex": [
                                      41,
                                      0,
                                      3,
                                      7,
                                      1,
                                      1,
                                      0,
                                      0
                                    ],
                                    "str": "console.error({ cause }, 'Failed to add post')",
                                    "label": 0,
                                    "name": "call_expression",
                                    "childrenLabels": [
                                      "functionNode",
                                      "argumentsNode"
                                    ],
                                    "children": [
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          1,
                                          1,
                                          0,
                                          0,
                                          0
                                        ],
                                        "str": "console.error",
                                        "label": "functionNode",
                                        "name": "member_expression",
                                        "childrenLabels": [
                                          "objectNode",
                                          "propertyNode"
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0
                                            ],
                                            "str": "console",
                                            "label": "objectNode",
                                            "name": "identifier"
                                          },
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              1,
                                              1,
                                              0,
                                              0,
                                              0,
                                              1
                                            ],
                                            "str": "error",
                                            "label": "propertyNode",
                                            "name": "property_identifier"
                                          }
                                        ]
                                      },
                                      {
                                        "nestedIndex": [
                                          41,
                                          0,
                                          3,
                                          7,
                                          1,
                                          1,
                                          0,
                                          0,
                                          1
                                        ],
                                        "str": "({ cause }, 'Failed to add post')",
                                        "label": "argumentsNode",
                                        "name": "arguments",
                                        "childrenLabels": [
                                          0,
                                          1
                                        ],
                                        "children": [
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              0
                                            ],
                                            "str": "{ cause }",
                                            "label": 0,
                                            "name": "object",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  41,
                                                  0,
                                                  3,
                                                  7,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  0,
                                                  0
                                                ],
                                                "str": "cause",
                                                "label": 0,
                                                "name": "shorthand_property_identifier"
                                              }
                                            ]
                                          },
                                          {
                                            "nestedIndex": [
                                              41,
                                              0,
                                              3,
                                              7,
                                              1,
                                              1,
                                              0,
                                              0,
                                              1,
                                              1
                                            ],
                                            "str": "'Failed to add post'",
                                            "label": 1,
                                            "name": "string",
                                            "childrenLabels": [
                                              0
                                            ],
                                            "children": [
                                              {
                                                "nestedIndex": [
                                                  41,
                                                  0,
                                                  3,
                                                  7,
                                                  1,
                                                  1,
                                                  0,
                                                  0,
                                                  1,
                                                  1,
                                                  0
                                                ],
                                                "str": "Failed to add post",
                                                "label": 0,
                                                "name": "string_fragment"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          42
        ],
        "str": "<div",
        "label": 42,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              42,
              0
            ],
            "str": "div",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          43
        ],
        "str": "className",
        "label": 43,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          44
        ],
        "str": "\"flex flex-col gap-y-4 font-semibold\"",
        "label": 44,
        "name": "string",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              44,
              0
            ],
            "str": "flex flex-col gap-y-4 font-semibold",
            "label": 0,
            "name": "string_fragment"
          }
        ]
      },
      {
        "nestedIndex": [
          45
        ],
        "str": "<input",
        "label": 45,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              45,
              0
            ],
            "str": "input",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          46
        ],
        "str": "className",
        "label": 46,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          47
        ],
        "str": "\"focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"\n              id",
        "label": 47,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              47,
              0
            ],
            "str": "\"focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  47,
                  0,
                  0
                ],
                "str": "focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              47,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              47,
              2
            ],
            "str": "id",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          48
        ],
        "str": "\"title\"\n              name",
        "label": 48,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              48,
              0
            ],
            "str": "\"title\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  48,
                  0,
                  0
                ],
                "str": "title",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              48,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              48,
              2
            ],
            "str": "name",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          49
        ],
        "str": "\"title\"\n              type",
        "label": 49,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              49,
              0
            ],
            "str": "\"title\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  49,
                  0,
                  0
                ],
                "str": "title",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              49,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              49,
              2
            ],
            "str": "type",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          50
        ],
        "str": "\"text\"\n              placeholder",
        "label": 50,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              50,
              0
            ],
            "str": "\"text\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  50,
                  0,
                  0
                ],
                "str": "text",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              50,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              50,
              2
            ],
            "str": "placeholder",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          51
        ],
        "str": "\"Title\"\n              disabled",
        "label": 51,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              51,
              0
            ],
            "str": "\"Title\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  51,
                  0,
                  0
                ],
                "str": "Title",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              51,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              51,
              2
            ],
            "str": "disabled",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          52
        ],
        "str": "{addPost.isLoading}",
        "label": 52,
        "name": "object",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              52,
              0
            ],
            "str": "addPost.",
            "label": 0,
            "name": "ERROR",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  52,
                  0,
                  0
                ],
                "str": "addPost",
                "label": 0,
                "name": "identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              52,
              1
            ],
            "str": "isLoading",
            "label": 1,
            "name": "shorthand_property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          53
        ],
        "str": ">",
        "label": 53,
        "name": "ERROR"
      },
      {
        "nestedIndex": [
          54
        ],
        "str": "<textarea",
        "label": 54,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              54,
              0
            ],
            "str": "textarea",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          55
        ],
        "str": "className",
        "label": 55,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          56
        ],
        "str": "\"resize-none focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"\n              id",
        "label": 56,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              56,
              0
            ],
            "str": "\"resize-none focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  56,
                  0,
                  0
                ],
                "str": "resize-none focus-visible:outline-dashed outline-offset-4 outline-2 outline-gray-700 rounded-xl px-4 py-3 bg-gray-900",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              56,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              56,
              2
            ],
            "str": "id",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          57
        ],
        "str": "\"text\"\n              name",
        "label": 57,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              57,
              0
            ],
            "str": "\"text\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  57,
                  0,
                  0
                ],
                "str": "text",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              57,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              57,
              2
            ],
            "str": "name",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          58
        ],
        "str": "\"text\"\n              placeholder",
        "label": 58,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              58,
              0
            ],
            "str": "\"text\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  58,
                  0,
                  0
                ],
                "str": "text",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              58,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              58,
              2
            ],
            "str": "placeholder",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          59
        ],
        "str": "\"Text\"\n              disabled",
        "label": 59,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              59,
              0
            ],
            "str": "\"Text\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  59,
                  0,
                  0
                ],
                "str": "Text",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              59,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              59,
              2
            ],
            "str": "disabled",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          60
        ],
        "str": "{addPost.isLoading}",
        "label": 60,
        "name": "object_pattern",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              60,
              0
            ],
            "str": "addPost.",
            "label": 0,
            "name": "ERROR",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  60,
                  0,
                  0
                ],
                "str": "addPost",
                "label": 0,
                "name": "identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              60,
              1
            ],
            "str": "isLoading",
            "label": 1,
            "name": "shorthand_property_identifier_pattern"
          }
        ]
      },
      {
        "nestedIndex": [
          61
        ],
        "str": "rows",
        "label": 61,
        "name": "ERROR",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              61,
              0
            ],
            "str": "rows",
            "label": 0,
            "name": "identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          62
        ],
        "str": "{6}\n            />",
        "label": 62,
        "name": "ERROR",
        "childrenLabels": [
          0,
          1
        ],
        "children": [
          {
            "nestedIndex": [
              62,
              0
            ],
            "str": "6",
            "label": 0,
            "name": "number"
          },
          {
            "nestedIndex": [
              62,
              1
            ],
            "str": ">",
            "label": 1,
            "name": "regex_pattern"
          }
        ]
      },
      {
        "nestedIndex": [
          63
        ],
        "str": "<div",
        "label": 63,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              63,
              0
            ],
            "str": "div",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          64
        ],
        "str": "className",
        "label": 64,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          65
        ],
        "str": "\"flex justify-center\"",
        "label": 65,
        "name": "string",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              65,
              0
            ],
            "str": "flex justify-center",
            "label": 0,
            "name": "string_fragment"
          }
        ]
      },
      {
        "nestedIndex": [
          66
        ],
        "str": "<input",
        "label": 66,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              66,
              0
            ],
            "str": "input",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          67
        ],
        "str": "className",
        "label": 67,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          68
        ],
        "str": "\"cursor-pointer bg-gray-900 p-2 rounded-md px-16\"\n                type",
        "label": 68,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              68,
              0
            ],
            "str": "\"cursor-pointer bg-gray-900 p-2 rounded-md px-16\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  68,
                  0,
                  0
                ],
                "str": "cursor-pointer bg-gray-900 p-2 rounded-md px-16",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              68,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              68,
              2
            ],
            "str": "type",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          69
        ],
        "str": "\"submit\"\n                disabled",
        "label": 69,
        "name": "member_expression",
        "childrenLabels": [
          "objectNode",
          "optionalChainNode",
          "propertyNode"
        ],
        "children": [
          {
            "nestedIndex": [
              69,
              0
            ],
            "str": "\"submit\"",
            "label": "objectNode",
            "name": "string",
            "childrenLabels": [
              0
            ],
            "children": [
              {
                "nestedIndex": [
                  69,
                  0,
                  0
                ],
                "str": "submit",
                "label": 0,
                "name": "string_fragment"
              }
            ]
          },
          {
            "nestedIndex": [
              69,
              1
            ],
            "str": "",
            "label": "optionalChainNode",
            "name": "optional_chain"
          },
          {
            "nestedIndex": [
              69,
              2
            ],
            "str": "disabled",
            "label": "propertyNode",
            "name": "property_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          70
        ],
        "str": "{addPost.isLoading}\n              />\n              {addPost.error",
        "label": 70,
        "name": "binary_expression",
        "childrenLabels": [
          "leftNode",
          1,
          "rightNode"
        ],
        "children": [
          {
            "nestedIndex": [
              70,
              0
            ],
            "str": "{addPost.isLoading}",
            "label": "leftNode",
            "name": "object",
            "childrenLabels": [
              0,
              1
            ],
            "children": [
              {
                "nestedIndex": [
                  70,
                  0,
                  0
                ],
                "str": "addPost.",
                "label": 0,
                "name": "ERROR",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      70,
                      0,
                      0,
                      0
                    ],
                    "str": "addPost",
                    "label": 0,
                    "name": "identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  70,
                  0,
                  1
                ],
                "str": "isLoading",
                "label": 1,
                "name": "shorthand_property_identifier"
              }
            ]
          },
          {
            "nestedIndex": [
              70,
              1
            ],
            "str": ">",
            "label": 1,
            "name": "ERROR"
          },
          {
            "nestedIndex": [
              70,
              2
            ],
            "str": "{addPost.error",
            "label": "rightNode",
            "name": "member_expression",
            "childrenLabels": [
              "objectNode",
              "propertyNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  70,
                  2,
                  0
                ],
                "str": "{addPost",
                "label": "objectNode",
                "name": "object",
                "childrenLabels": [
                  0
                ],
                "children": [
                  {
                    "nestedIndex": [
                      70,
                      2,
                      0,
                      0
                    ],
                    "str": "addPost",
                    "label": 0,
                    "name": "shorthand_property_identifier"
                  }
                ]
              },
              {
                "nestedIndex": [
                  70,
                  2,
                  1
                ],
                "str": "error",
                "label": "propertyNode",
                "name": "property_identifier"
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          71
        ],
        "str": "<p",
        "label": 71,
        "name": "type_arguments",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              71,
              0
            ],
            "str": "p",
            "label": 0,
            "name": "type_identifier"
          }
        ]
      },
      {
        "nestedIndex": [
          72
        ],
        "str": "style",
        "label": 72,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          73
        ],
        "str": "{ color: 'red' }}>{addPost.error.message}",
        "label": 73,
        "name": "object_pattern",
        "childrenLabels": [
          0
        ],
        "children": [
          {
            "nestedIndex": [
              73,
              0
            ],
            "str": "color: 'red' }}>{addPost.error.message",
            "label": 0,
            "name": "pair_pattern",
            "childrenLabels": [
              "keyNode",
              "valueNode"
            ],
            "children": [
              {
                "nestedIndex": [
                  73,
                  0,
                  0
                ],
                "str": "color",
                "label": "keyNode",
                "name": "property_identifier"
              },
              {
                "nestedIndex": [
                  73,
                  0,
                  1
                ],
                "str": "'red' }}>{addPost.error.message",
                "label": "valueNode",
                "name": "member_expression",
                "childrenLabels": [
                  "objectNode",
                  "propertyNode"
                ],
                "children": [
                  {
                    "nestedIndex": [
                      73,
                      0,
                      1,
                      0
                    ],
                    "str": "'red' }}>{addPost.error",
                    "label": "objectNode",
                    "name": "member_expression",
                    "childrenLabels": [
                      "objectNode",
                      1,
                      "propertyNode"
                    ],
                    "children": [
                      {
                        "nestedIndex": [
                          73,
                          0,
                          1,
                          0,
                          0
                        ],
                        "str": "'red'",
                        "label": "objectNode",
                        "name": "string",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              73,
                              0,
                              1,
                              0,
                              0,
                              0
                            ],
                            "str": "red",
                            "label": 0,
                            "name": "string_fragment"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          73,
                          0,
                          1,
                          0,
                          1
                        ],
                        "str": "}}>{addPost",
                        "label": 1,
                        "name": "ERROR",
                        "childrenLabels": [
                          0
                        ],
                        "children": [
                          {
                            "nestedIndex": [
                              73,
                              0,
                              1,
                              0,
                              1,
                              0
                            ],
                            "str": "addPost",
                            "label": 0,
                            "name": "identifier"
                          }
                        ]
                      },
                      {
                        "nestedIndex": [
                          73,
                          0,
                          1,
                          0,
                          2
                        ],
                        "str": "error",
                        "label": "propertyNode",
                        "name": "property_identifier"
                      }
                    ]
                  },
                  {
                    "nestedIndex": [
                      73,
                      0,
                      1,
                      1
                    ],
                    "str": "message",
                    "label": "propertyNode",
                    "name": "property_identifier"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nestedIndex": [
          74
        ],
        "str": "p",
        "label": 74,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          75
        ],
        "str": "div",
        "label": 75,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          76
        ],
        "str": "div",
        "label": 76,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          77
        ],
        "str": "form",
        "label": 77,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          78
        ],
        "str": "div",
        "label": 78,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          79
        ],
        "str": "div",
        "label": 79,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          80
        ],
        "str": "IndexPage",
        "label": 80,
        "name": "identifier"
      },
      {
        "nestedIndex": [
          81
        ],
        "str": "/**\n * If you want to statically render this page\n * - Export `appRouter` & `createContext` from [trpc].ts\n * - Make the `opts` object optional on `createContext()`\n *\n * @link https://trpc.io/docs/ssg\n */",
        "label": 81,
        "name": "comment"
      },
      {
        "nestedIndex": [
          82
        ],
        "str": "// export const getStaticProps = async (",
        "label": 82,
        "name": "comment"
      },
      {
        "nestedIndex": [
          83
        ],
        "str": "//   context: GetStaticPropsContext<{ filter: string }>,",
        "label": 83,
        "name": "comment"
      },
      {
        "nestedIndex": [
          84
        ],
        "str": "// ) => {",
        "label": 84,
        "name": "comment"
      },
      {
        "nestedIndex": [
          85
        ],
        "str": "//   const ssg = createServerSideHelpers({",
        "label": 85,
        "name": "comment"
      },
      {
        "nestedIndex": [
          86
        ],
        "str": "//     router: appRouter,",
        "label": 86,
        "name": "comment"
      },
      {
        "nestedIndex": [
          87
        ],
        "str": "//     ctx: await createContext(),",
        "label": 87,
        "name": "comment"
      },
      {
        "nestedIndex": [
          88
        ],
        "str": "//   });",
        "label": 88,
        "name": "comment"
      },
      {
        "nestedIndex": [
          89
        ],
        "str": "//",
        "label": 89,
        "name": "comment"
      },
      {
        "nestedIndex": [
          90
        ],
        "str": "//   await ssg.post.all.fetch();",
        "label": 90,
        "name": "comment"
      },
      {
        "nestedIndex": [
          91
        ],
        "str": "//",
        "label": 91,
        "name": "comment"
      },
      {
        "nestedIndex": [
          92
        ],
        "str": "//   return {",
        "label": 92,
        "name": "comment"
      },
      {
        "nestedIndex": [
          93
        ],
        "str": "//     props: {",
        "label": 93,
        "name": "comment"
      },
      {
        "nestedIndex": [
          94
        ],
        "str": "//       trpcState: ssg.dehydrate(),",
        "label": 94,
        "name": "comment"
      },
      {
        "nestedIndex": [
          95
        ],
        "str": "//       filter: context.params?.filter ?? 'all',",
        "label": 95,
        "name": "comment"
      },
      {
        "nestedIndex": [
          96
        ],
        "str": "//     },",
        "label": 96,
        "name": "comment"
      },
      {
        "nestedIndex": [
          97
        ],
        "str": "//     revalidate: 1,",
        "label": 97,
        "name": "comment"
      },
      {
        "nestedIndex": [
          98
        ],
        "str": "//   };",
        "label": 98,
        "name": "comment"
      },
      {
        "nestedIndex": [
          99
        ],
        "str": "// };",
        "label": 99,
        "name": "comment"
      }
    ]
  },
  "imports": [],
  "filePath": "../example-todo-list/src/pages/index.tsx",
  "isTest": false,
  "isConfig": false
}